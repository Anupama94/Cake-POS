{"version":3,"sources":["callApi.js"],"names":["baseUrl","userLogin","credentials","Promise","resolve","reject","postCall","then","result","status","HttpStatus","OK","apiConfig","authenticationToken","data","token","userId","id","catch","err","response","UNAUTHORIZED","message","error","AUTH_FAILED","MESSAGE","code","CODE","INTERNAL_SERVER_ERROR","SERVICE_UNAVAILABLE","getOrderItems","orderId","authenticatedGetCall","updateOrder","updateOps","putCall","getUsersOrders","console","log","getMenuItems","url","mydata","callingUrl","axios","post","CREATED","UNEXPECTED_ERROR","header","requestHeader","headers","get","NOT_FOUND","put"],"mappings":"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","sourcesContent":["import { apiConfig } from '../apiCalls/config';\nimport axios from 'axios';\nimport { error } from './errorConstants';\nimport HttpStatus from 'http-status-codes';\n\nconst baseUrl = \"http://localhost:3001/\";\n\nexport const userLogin = (credentials) => {\n    return new Promise((resolve, reject) => {\n        postCall(\"users/login\", credentials)\n            .then(result => {\n                if (result.status === HttpStatus.OK) {\n                    apiConfig.authenticationToken = result.data.token;\n                    apiConfig.userId = result.data.id;\n                    resolve();\n                }\n            })\n            .catch(err => {\n                if (err.response.status === HttpStatus.UNAUTHORIZED) {\n                    reject({\n                        message: error.AUTH_FAILED.MESSAGE,\n                        code: error.AUTH_FAILED.CODE\n                    });\n                }\n                else if (err.response.status === HttpStatus.INTERNAL_SERVER_ERROR) {\n                    reject({\n                        message: error.SERVICE_UNAVAILABLE.MESSAGE,\n                        code: error.SERVICE_UNAVAILABLE.CODE\n                    });\n                }\n\n            });\n    });\n}\n\nexport const getOrderItems = (orderId) => {\n        return new Promise((resolve, reject) => {\n            authenticatedGetCall(\"orders/\" + orderId)\n                .then(result => {\n                    resolve(result);\n\n\n                })\n                .catch(err => { reject() });\n        });\n    }\n\n\n    export const updateOrder = (orderId, updateOps) => {\n        return new Promise((resolve, reject) => {\n            putCall(\"orders/\" + orderId, updateOps)\n                .then(result => {\n                    resolve(result);\n                })\n                .catch(err => { reject() });\n        });\n    }\n\n\n    // this needs to be changed\n    export const getUsersOrders = () => {\n        return new Promise((resolve, reject) => {\n            console.log(apiConfig.userId);\n            authenticatedGetCall(\"orders/all/\" + apiConfig.userId)\n                .then(result => {\n                    resolve(result);\n                })\n                .catch(err => { reject() });\n        });\n    }\n\n\n    export const getMenuItems = () => {\n        return new Promise((resolve, reject) => {\n            authenticatedGetCall(\"items/\")\n                .then(result => {\n                    resolve(result);\n                })\n                .catch(err => { reject() });\n        });\n    }\n\n\n    /*\n        POST, GET, PUT calls defined\n     */\n\n    function postCall(url, mydata) {\n        return new Promise((resolve, reject) => {\n            let callingUrl = baseUrl + url;\n            axios.post(callingUrl, mydata)\n                .then(response => {\n                    if (response.status === HttpStatus.OK || response.status === HttpStatus.CREATED) {\n                        resolve(response);\n                    }\n                }\n                )\n                .catch(err => {\n                    if (err.response.status === HttpStatus.UNAUTHORIZED) {\n                        console.log(\"Unauthorized request initiated from axios post call in callApi.js\");\n                        reject(err);\n                    }\n                    else if (err.response.status === HttpStatus.INTERNAL_SERVER_ERROR) {\n                        console.log(\"Internal Server Error initiated from axios post call in callApi.js\")\n                        reject(err)\n                    }\n                    else {\n                        console.log(error.UNEXPECTED_ERROR.MESSAGE + \" initiated from  axios post call in callApi.js\");\n                        reject(err);\n                    }\n                });\n        });\n    }\n\n\n    function authenticatedGetCall(url, header) {\n        const requestHeader = { headers: { \"Authorization\": \"Bearer \" + apiConfig.authenticationToken } };\n\n        return new Promise((resolve, reject) => {\n            let callingUrl = baseUrl + url;\n            // resolve(axios.get(callingUrl, requestHeader)\n            //     .then(response => {\n            //         return response;\n            //     }));\n            axios.get(callingUrl, requestHeader)\n            .then(response => {\n                if (response.status === HttpStatus.OK) {\n                    resolve(response);\n                }\n            })\n            .catch(err => {\n                if (err.response.status === HttpStatus.NOT_FOUND) {\n                    console.log(\"requested items not found, initiated from axios authenticatedGetCall in callApi.js\")\n                    reject(err);\n                }\n                else if (err.response.status === HttpStatus.INTERNAL_SERVER_ERROR) {\n                    console.log(\"Internal Server Error initiated from axios authenticatedGetCall in callApi.js\")\n                    reject(err);\n                }\n                else {\n                    console.log(error.UNEXPECTED_ERROR.MESSAGE + \" initiated from  axios authenticatedGetCall in callApi.js\");\n                    reject(err);\n                }\n            })\n            \n        });\n    }\n\n\n    function putCall(url, updateOps) {\n        return new Promise((resolve, reject) => {\n            let callingUrl = baseUrl + url;\n            resolve(axios.put(callingUrl, updateOps)\n                .then(response => {\n                    return response;\n                }));\n        });\n    }"]}