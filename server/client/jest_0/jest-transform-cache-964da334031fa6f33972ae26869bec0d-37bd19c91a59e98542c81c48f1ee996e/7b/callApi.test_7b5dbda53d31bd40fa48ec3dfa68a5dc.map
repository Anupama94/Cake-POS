{"version":3,"sources":["callApi.test.js"],"names":["describe","it","mockAxios","post","mockImplementationOnce","Promise","resolve","status","HttpStatus","OK"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,QAAQ,CAAC,oBAAD,EAAuB,MAAM;AAGnCC,EAAAA,EAAE,CAAC,uCAAD,EAA0C,YAAY;AACtDC,mBAAUC,IAAV,CAAeC,sBAAf,CAAsC,MAAMC,OAAO,CAACC,OAAR,CAAgB;AAEpDC,MAAAA,MAAM,EAAEC,yBAAWC;AAFiC,KAAhB,CAA5C,EADsD,CAOtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAGD,GAhBC,CAAF;AAkBD,CArBO,CAAR,C,CAwBA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA","sourcesContent":["import { userLogin } from '../../apiCalls/callApi';\nimport { error } from '../../apiCalls/errorConstants';\nimport HttpStatus from 'http-status-codes';\nimport mockAxios from 'axios';\n\ndescribe(\"LoginBox Component\", () => {\n\n\n  it(\"calls axios getCall and returns users\", async () => {\n    mockAxios.post.mockImplementationOnce(() => Promise.resolve({\n\n            status: HttpStatus.OK\n\n    }));\n\n    // const login = userLogin({email: \"abcd@123.com\", password: \"abc\"})\n    // .then(response => {\n    //     expect(mockAxios.post).toHaveBeenCalledTimes(0);\n    //     expect(response.status).toBe(HttpStatus.OK);\n    //     expect(mockAxios.post).toHaveBeenCalledWith(true);\n    // })\n    // .catch(err => {});\n\n\n  });\n\n});\n\n\n// import axios from 'axios';\n// import moxios from 'moxios';\n// import sinon from 'sinon';\n// import { userLogin } from '../../apiCalls/callApi';\n// import { postCall } from '../../apiCalls/services';\n\n\n// //jest.mock('../../apiCalls/services');\n// describe('mocking axios requests', function () {\n\n//     describe('across entire suite', function () {\n\n//         it('calls axios getCall and returns users', () => {\n//             jest.unmock('../../apiCalls/services');\n//             const services = require('../../apiCalls/services');\n//             services.postCall = sinon.stub();\n//             services.postCall.withArgs(\"users/login\", {email: \"abcd@123.com\", password: \"abc\"}).returns(Promise.resolve({status: '200 OK'}));\n\n//             // return userLogin({email: \"abcd@123.com\", password: \"abc\"})\n//             // .then(response => {\n//             //     expect(services.postCall).toHaveBeenCalledTimes(0);\n//             // })\n//             // .catch(() => {});\n//             // })\n\n\n//         })\n//     })\n\n\n\n// // export default {\n// //     post: jest.fn((url, data) => Promise.resolve({response: {status: \"200 OK\"}}))\n// // }\n"]}