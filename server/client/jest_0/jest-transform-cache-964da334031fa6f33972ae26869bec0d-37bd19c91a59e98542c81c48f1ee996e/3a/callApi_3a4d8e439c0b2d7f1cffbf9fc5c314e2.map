{"version":3,"sources":["callApi.js"],"names":["baseUrl","requestHeader","headers","apiConfig","authenticationToken","userLogin","credentials","Promise","resolve","reject","postCall","then","result","status","console","log","data","token","userId","id","catch","err","getOrderItems","orderId","authenticatedGetCall","updateOrder","updateOps","putCall","getUsersOrders","getMenuItems","url","mydata","callingUrl","axios","post","response","header","get","put"],"mappings":"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","sourcesContent":["import { apiConfig } from '../apiCalls/config';\nimport axios from 'axios';\n\nconst baseUrl = \"http://localhost:3001/\";\n\nconst requestHeader = { headers: { \"Authorization\": \"Bearer \" + apiConfig.authenticationToken } }\n\nexport const userLogin = (credentials) => {\n    return new Promise((resolve, reject) => {\n        postCall(\"users/login\", credentials)\n            .then(result => {\n                if (result.status === 200){\n                    console.log(result);\n                    apiConfig.authenticationToken = result.data.token;\n                    apiConfig.userId = result.data.id;\n                    resolve();\n                }\n                else if (result.status === 401) {\n                    console.log(\"unauthorized\");\n                    //reject();\n                }\n                \n\n\n            })\n            .catch(err => {\n                console.log(\"rejected\");\n                reject();\n            });\n    });\n}\n\nexport const getOrderItems = (orderId) => {\n    return new Promise((resolve, reject) => {\n        authenticatedGetCall(\"orders/\"+orderId)\n            .then(result => {\n                resolve(result);\n\n\n            })\n            .catch(err => {reject()});\n    });\n}\n\n\nexport const updateOrder = (orderId, updateOps) => {\n    return new Promise((resolve, reject) => {\n        putCall(\"orders/\" + orderId, updateOps)\n            .then(result => {\n                resolve(result);\n            })\n            .catch(err => {reject()});\n    });\n}\n\n\n// this needs to be changed\nexport const getUsersOrders = () => {\n    return new Promise((resolve, reject) => {\n        console.log(apiConfig.userId);\n        authenticatedGetCall(\"orders/all/\" + apiConfig.userId)\n            .then(result => {\n                resolve(result);\n            })\n            .catch(err => {reject()});\n    });\n}\n\n\nexport const getMenuItems = () => {\n    return new Promise((resolve, reject) => {\n        authenticatedGetCall(\"items/\")\n            .then(result => {\n                resolve(result);\n            })\n            .catch(err => {reject()});\n    });\n}\n\n\n/*\n    POST, GET, PUT calls defined\n */\n\nfunction postCall(url, mydata) {\n    return new Promise((resolve, reject) => {\n        let callingUrl = baseUrl + url;\n        // resolve(axios.post(callingUrl, mydata)\n        //     .then(response => {\n        //         return response;\n        //     }));\n        axios.post(callingUrl, mydata)\n             .then(response => {\n                 if (response.status === 200 || response.status === 201 || response.status === 401) {\n                     console.log(\"dispatched\");\n                     resolve(response);\n                 }\n                 else if (response.status === 500){\n                     console.log(\"error calling api post call\");\n                     reject();\n                 }\n                 else {\n                    console.log(\"unexpected error code\");\n                    reject();\n                 }\n             }\n             )\n             .catch(err => {\n                console.log(\"no error response\");\n             });\n    });\n}\n\n\nfunction authenticatedGetCall(url, header) {\n    const requestHeader = { headers: { \"Authorization\": \"Bearer \" + apiConfig.authenticationToken } };\n\n    return new Promise((resolve, reject) => {\n        let callingUrl = baseUrl + url;\n        resolve(axios.get(callingUrl, requestHeader)\n            .then(response => {\n                return response;\n            }));\n    });\n}\n\n\nfunction putCall(url, updateOps) {\n    return new Promise((resolve, reject) => {\n        let callingUrl = baseUrl + url;\n        resolve(axios.put(callingUrl,updateOps)\n            .then(response => {\n                return response;\n            }));\n    });\n}"]}