{"version":3,"sources":["callApi.js"],"names":["baseUrl","requestHeader","headers","apiConfig","authenticationToken","userLogin","credentials","Promise","resolve","reject","postCall","then","result","status","data","token","userId","id","catch","err","response","message","error","AUTH_FAILED","MESSAGE","code","CODE","SERVICE_UNAVAILABLE","getOrderItems","orderId","authenticatedGetCall","updateOrder","updateOps","putCall","getUsersOrders","console","log","getMenuItems","url","mydata","callingUrl","axios","post","header","get","put"],"mappings":"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","sourcesContent":["import { apiConfig } from '../apiCalls/config';\nimport axios from 'axios';\nimport { error } from './errorConstants';\n\nconst baseUrl = \"http://localhost:3001/\";\n\nconst requestHeader = { headers: { \"Authorization\": \"Bearer \" + apiConfig.authenticationToken } }\n\nexport const userLogin = (credentials) => {\n    return new Promise((resolve, reject) => {\n        postCall(\"users/login\", credentials)\n            .then(result => {\n                if (result.status === 200) {\n                    apiConfig.authenticationToken = result.data.token;\n                    apiConfig.userId = result.data.id;\n                    resolve();\n                }\n\n\n\n            })\n            .catch(err => {\n                if (err.response.status === 401) {\n                    reject({\n                        message: error.AUTH_FAILED.MESSAGE,\n                        code: error.AUTH_FAILED.CODE\n                    });\n                }\n                else if (err.response.status === 500) {\n                    reject({\n                        message: error.SERVICE_UNAVAILABLE.MESSAGE,\n                        code: error.SERVICE_UNAVAILABLE.CODE\n                    });\n                }\n\n\n            });\n    });\n}\n\nexport const getOrderItems = (orderId) => {\n        return new Promise((resolve, reject) => {\n            authenticatedGetCall(\"orders/\" + orderId)\n                .then(result => {\n                    resolve(result);\n\n\n                })\n                .catch(err => { reject() });\n        });\n    }\n\n\n    export const updateOrder = (orderId, updateOps) => {\n        return new Promise((resolve, reject) => {\n            putCall(\"orders/\" + orderId, updateOps)\n                .then(result => {\n                    resolve(result);\n                })\n                .catch(err => { reject() });\n        });\n    }\n\n\n    // this needs to be changed\n    export const getUsersOrders = () => {\n        return new Promise((resolve, reject) => {\n            console.log(apiConfig.userId);\n            authenticatedGetCall(\"orders/all/\" + apiConfig.userId)\n                .then(result => {\n                    resolve(result);\n                })\n                .catch(err => { reject() });\n        });\n    }\n\n\n    export const getMenuItems = () => {\n        return new Promise((resolve, reject) => {\n            authenticatedGetCall(\"items/\")\n                .then(result => {\n                    resolve(result);\n                })\n                .catch(err => { reject() });\n        });\n    }\n\n\n    /*\n        POST, GET, PUT calls defined\n     */\n\n    function postCall(url, mydata) {\n        return new Promise((resolve, reject) => {\n            let callingUrl = baseUrl + url;\n            // resolve(axios.post(callingUrl, mydata)\n            //     .then(response => {\n            //         return response;\n            //     }));\n            axios.post(callingUrl, mydata)\n                .then(response => {\n                    if (response.status === 200 || response.status === 201 || response.status === 401) {\n\n                        resolve(response);\n                    }\n                    else if (response.status === 500) {\n                        console.log(\"error calling api post call\");\n                        reject();\n                    }\n                    else {\n                        console.log(\"unexpected error code\");\n                        reject();\n                    }\n                }\n                )\n                .catch(err => {\n                    if (err.response.status === 401) {\n                        reject(err);\n                    }\n                });\n        });\n    }\n\n\n    function authenticatedGetCall(url, header) {\n        const requestHeader = { headers: { \"Authorization\": \"Bearer \" + apiConfig.authenticationToken } };\n\n        return new Promise((resolve, reject) => {\n            let callingUrl = baseUrl + url;\n            resolve(axios.get(callingUrl, requestHeader)\n                .then(response => {\n                    return response;\n                }));\n        });\n    }\n\n\n    function putCall(url, updateOps) {\n        return new Promise((resolve, reject) => {\n            let callingUrl = baseUrl + url;\n            resolve(axios.put(callingUrl, updateOps)\n                .then(response => {\n                    return response;\n                }));\n        });\n    }"]}