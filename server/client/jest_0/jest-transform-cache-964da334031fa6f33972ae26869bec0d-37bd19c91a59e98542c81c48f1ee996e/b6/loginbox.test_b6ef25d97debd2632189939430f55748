67823d6b2db372b7e7115d23b4e5032a
"use strict";

var _interopRequireDefault = require("/home/anupamaa/Desktop/Training/pos/server/client/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _enzyme = require("enzyme");

var _LoginBox = require("../Login/LoginBox");

var _enzymeToJson = require("enzyme-to-json");

var _jsxFileName = "/home/anupamaa/Desktop/Training/pos/server/client/src/components/tests/loginbox.test.js";
describe("LoginBox Component", () => {
  let wrapper;
  let initialState = {
    email: '',
    password: '',
    validate: {
      emailState: '',
      passwordState: ''
    },
    errorAlert: {
      visible: false,
      message: ''
    }
  };
  beforeEach(() => {
    wrapper = (0, _enzyme.shallow)(_react.default.createElement(_LoginBox.LoginBox, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 25
      },
      __self: void 0
    }));
  });
  it("should render correctly", () => {
    expect((0, _enzymeToJson.shallowToJson)(wrapper)).toMatchSnapshot();
  });
  it('when submit button is clicked without username nor password emailState should be set to has-danger', () => {
    const logInSpy = jest.spyOn(wrapper.instance(), "submitLogin");
    const loginButton = wrapper.find('button.login-btn');
    expect(logInSpy).not.toHaveBeenCalled();
    loginButton.simulate('click');
    expect(logInSpy).toHaveBeenCalledTimes(1);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luYm94LnRlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJ3cmFwcGVyIiwiaW5pdGlhbFN0YXRlIiwiZW1haWwiLCJwYXNzd29yZCIsInZhbGlkYXRlIiwiZW1haWxTdGF0ZSIsInBhc3N3b3JkU3RhdGUiLCJlcnJvckFsZXJ0IiwidmlzaWJsZSIsIm1lc3NhZ2UiLCJiZWZvcmVFYWNoIiwiaXQiLCJleHBlY3QiLCJ0b01hdGNoU25hcHNob3QiLCJsb2dJblNweSIsImplc3QiLCJzcHlPbiIsImluc3RhbmNlIiwibG9naW5CdXR0b24iLCJmaW5kIiwibm90IiwidG9IYXZlQmVlbkNhbGxlZCIsInNpbXVsYXRlIiwidG9IYXZlQmVlbkNhbGxlZFRpbWVzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7OztBQUdBQSxRQUFRLENBQUMsb0JBQUQsRUFBdUIsTUFBTTtBQUVuQyxNQUFJQyxPQUFKO0FBQ0EsTUFBSUMsWUFBWSxHQUFHO0FBQ2pCQyxJQUFBQSxLQUFLLEVBQUUsRUFEVTtBQUVqQkMsSUFBQUEsUUFBUSxFQUFFLEVBRk87QUFHakJDLElBQUFBLFFBQVEsRUFBRTtBQUNSQyxNQUFBQSxVQUFVLEVBQUUsRUFESjtBQUVSQyxNQUFBQSxhQUFhLEVBQUU7QUFGUCxLQUhPO0FBT2pCQyxJQUFBQSxVQUFVLEVBQUU7QUFDVkMsTUFBQUEsT0FBTyxFQUFFLEtBREM7QUFFVkMsTUFBQUEsT0FBTyxFQUFFO0FBRkM7QUFQSyxHQUFuQjtBQWFBQyxFQUFBQSxVQUFVLENBQUMsTUFBTTtBQUNmVixJQUFBQSxPQUFPLEdBQUcscUJBQVEsNkJBQUMsa0JBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsTUFBUixDQUFWO0FBQ0QsR0FGUyxDQUFWO0FBS0FXLEVBQUFBLEVBQUUsQ0FBQyx5QkFBRCxFQUE0QixNQUFNO0FBQ2xDQyxJQUFBQSxNQUFNLENBQUMsaUNBQWNaLE9BQWQsQ0FBRCxDQUFOLENBQStCYSxlQUEvQjtBQUNELEdBRkMsQ0FBRjtBQUtBRixFQUFBQSxFQUFFLENBQUMsb0dBQUQsRUFBdUcsTUFBTTtBQUM3RyxVQUFNRyxRQUFRLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXaEIsT0FBTyxDQUFDaUIsUUFBUixFQUFYLEVBQStCLGFBQS9CLENBQWpCO0FBRUEsVUFBTUMsV0FBVyxHQUFHbEIsT0FBTyxDQUFDbUIsSUFBUixDQUFhLGtCQUFiLENBQXBCO0FBQ0FQLElBQUFBLE1BQU0sQ0FBQ0UsUUFBRCxDQUFOLENBQWlCTSxHQUFqQixDQUFxQkMsZ0JBQXJCO0FBQ0FILElBQUFBLFdBQVcsQ0FBQ0ksUUFBWixDQUFxQixPQUFyQjtBQUNBVixJQUFBQSxNQUFNLENBQUNFLFFBQUQsQ0FBTixDQUFpQlMscUJBQWpCLENBQXVDLENBQXZDO0FBRUQsR0FSQyxDQUFGO0FBWUQsQ0F0Q08sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCB7IHNoYWxsb3cgfSBmcm9tICdlbnp5bWUnO1xuaW1wb3J0IHsgTG9naW5Cb3ggfSBmcm9tICcuLi9Mb2dpbi9Mb2dpbkJveCdcbmltcG9ydCB7IHNoYWxsb3dUb0pzb24gfSBmcm9tICdlbnp5bWUtdG8tanNvbic7XG5cblxuZGVzY3JpYmUoXCJMb2dpbkJveCBDb21wb25lbnRcIiwgKCkgPT4ge1xuXG4gIGxldCB3cmFwcGVyO1xuICBsZXQgaW5pdGlhbFN0YXRlID0ge1xuICAgIGVtYWlsOiAnJyxcbiAgICBwYXNzd29yZDogJycsXG4gICAgdmFsaWRhdGU6IHtcbiAgICAgIGVtYWlsU3RhdGU6ICcnLFxuICAgICAgcGFzc3dvcmRTdGF0ZTogJydcbiAgICB9LFxuICAgIGVycm9yQWxlcnQ6IHtcbiAgICAgIHZpc2libGU6IGZhbHNlLFxuICAgICAgbWVzc2FnZTogJydcbiAgICB9XG4gIH07XG5cbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgd3JhcHBlciA9IHNoYWxsb3coPExvZ2luQm94IC8+KTtcbiAgfVxuICApO1xuXG4gIGl0KFwic2hvdWxkIHJlbmRlciBjb3JyZWN0bHlcIiwgKCkgPT4ge1xuICAgIGV4cGVjdChzaGFsbG93VG9Kc29uKHdyYXBwZXIpKS50b01hdGNoU25hcHNob3QoKTtcbiAgfSk7XG5cblxuICBpdCgnd2hlbiBzdWJtaXQgYnV0dG9uIGlzIGNsaWNrZWQgd2l0aG91dCB1c2VybmFtZSBub3IgcGFzc3dvcmQgZW1haWxTdGF0ZSBzaG91bGQgYmUgc2V0IHRvIGhhcy1kYW5nZXInLCAoKSA9PiB7XG4gICAgY29uc3QgbG9nSW5TcHkgPSBqZXN0LnNweU9uKHdyYXBwZXIuaW5zdGFuY2UoKSwgXCJzdWJtaXRMb2dpblwiKTtcblxuICAgIGNvbnN0IGxvZ2luQnV0dG9uID0gd3JhcHBlci5maW5kKCdidXR0b24ubG9naW4tYnRuJyk7XG4gICAgZXhwZWN0KGxvZ0luU3B5KS5ub3QudG9IYXZlQmVlbkNhbGxlZCgpO1xuICAgIGxvZ2luQnV0dG9uLnNpbXVsYXRlKCdjbGljaycpO1xuICAgIGV4cGVjdChsb2dJblNweSkudG9IYXZlQmVlbkNhbGxlZFRpbWVzKDEpO1xuXG4gIH0pO1xuXG5cblxufSk7XG4iXX0=