{"version":3,"sources":["callApi.test.js"],"names":["jest","mock","describe","it","resp","status","mocked","fn","axios","post","mockResolvedValue","email","password","then","expect","toHaveBeenCalled"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAUAA,IAAI,CAACC,IAAL,CAAU,OAAV;;;;AAPA;;AACA;;AACA;;AACA;;AACA;;AAIAC,QAAQ,CAAC,wBAAD,EAA2B,YAAY;AAE3CA,EAAAA,QAAQ,CAAC,qBAAD,EAAwB,YAAY;AAE1CC,IAAAA,EAAE,CAAC,uCAAD,EAA0C,MAAM;AAChD;AACA;AACA;AAEA,YAAMC,IAAI,GAAG;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAb;AACA,UAAIC,MAAM,GAAGN,IAAI,CAACO,EAAL,CAAQ,MAAMC,eAAMC,IAAN,CAAWC,iBAAX,CAA6BN,IAA7B,CAAd,CAAb;AAEA,aAAO,wBAAU;AAACO,QAAAA,KAAK,EAAE,cAAR;AAAwBC,QAAAA,QAAQ,EAAE;AAAlC,OAAV,EACNC,IADM,CACDT,IAAI,IAAI;AACVU,QAAAA,MAAM,CAACR,MAAD,CAAN,CAAeS,gBAAf,CAAgC,CAAhC;AACH,OAHM,CAAP,CARgD,CAahD;AAGD,KAhBC,CAAF;AAiBD,GAnBO,CAAR;AAoBH,CAtBO,CAAR,C,CAyBA;AACA;AACA","sourcesContent":["// import { userLogin } from '../../apiCalls/callApi';\n// import { error } from '../../apiCalls/errorConstants';\n// import HttpStatus from 'http-status-codes';\n// import mockAxios from 'axios';\n\n// describe(\"LoginBox Component\", () => {\n\n\n//   it(\"calls axios getCall and returns users\", async () => {\n//     mockAxios.post.mockImplementationOnce(() => Promise.resolve({\n        \n//             status: HttpStatus.OK\n        \n//     }));\n\n//     const login = userLogin({email: \"abcd@123.com\", password: \"abc\"})\n//     .then(response => {\n//         expect(mockAxios.post).toHaveBeenCalledTimes(0);\n//         expect(response.status).toBe(HttpStatus.OK);\n//         expect(mockAxios.post).toHaveBeenCalledWith(true);\n//     })\n//     .catch(err => {});\n   \n    \n//   });\n\n// });\n\n\nimport axios from 'axios';\nimport moxios from 'moxios';\nimport sinon from 'sinon';\nimport { userLogin } from '../../apiCalls/callApi';\nimport { postCall } from '../../apiCalls/services';\n\n\njest.mock('axios');\ndescribe('mocking axios requests', function () {\n\n    describe('across entire suite', function () {\n  \n      it('calls axios getCall and returns users', () => {\n        // jest.mock('../../apiCalls/services', () => ({\n        //     postCall: jest.fn(() => Promise.resolve({ status: '200 OK' }))\n        //   }));\n          \n        const resp = {status: \"200 OK\"};\n        let mocked = jest.fn(() => axios.post.mockResolvedValue(resp));\n\n        return userLogin({email: \"abcd@123.com\", password: \"abc\"})\n        .then(resp => {\n            expect(mocked).toHaveBeenCalled(1);\n        })\n  \n        // Elsewhere in your code axios.get('/users/search', { params: { q: 'flintstone' } }) is called\n  \n        \n      })\n    })\n})  \n\n\n// export default {\n//     post: jest.fn((url, data) => Promise.resolve({response: {status: \"200 OK\"}}))\n// }\n"]}