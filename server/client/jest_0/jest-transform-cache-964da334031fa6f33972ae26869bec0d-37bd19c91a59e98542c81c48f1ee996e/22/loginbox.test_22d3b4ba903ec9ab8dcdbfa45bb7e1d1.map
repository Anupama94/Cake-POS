{"version":3,"sources":["loginbox.test.js"],"names":["describe","wrapper","beforeEach","it","expect","toMatchSnapshot"],"mappings":";;;;AAAA;;AAEA;;AACA;;AACA;;;AAGAA,QAAQ,CAAC,oBAAD,EAAuB,MAAM;AAEjC,MAAIC,OAAJ;AAEAC,EAAAA,UAAU,CAAC,MAAM;AACZD,IAAAA,OAAO,GAAG,qBAAQ,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CAAV;AACA,GAFK,CAAV;AAKAE,EAAAA,EAAE,CAAC,yBAAD,EAA4B,MAAM;AAChCC,IAAAA,MAAM,CAAC,iCAAcH,OAAd,CAAD,CAAN,CAA+BI,eAA/B;AACH,GAFC,CAAF;AAKAF,EAAAA,EAAE,CAAC,oGAAD,EAAuG,MAAM,CAC3G;AACA;AACA;AACH,GAJC,CAAF,CAdiC,CAoBjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEH,CA5CO,CAAR","sourcesContent":["import React from 'react';\n\nimport { shallow } from 'enzyme';\nimport LoginBox from '../Login/LoginBox'\nimport { shallowToJson } from 'enzyme-to-json';\n\n\ndescribe(\"LoginBox Component\", () => {\n\n    let wrapper;\n\n    beforeEach(() => {\n         wrapper = shallow(<LoginBox />); \n        }\n    );\n\n    it(\"should render correctly\", () => {\n        expect(shallowToJson(wrapper)).toMatchSnapshot();\n    });\n\n\n    it('when submit button is clicked without username nor password emailState should be set to has-danger', () => {\n        //const submitButton = wrapper.find('button.login-btn').toBeTruthy;\n        //expect(foodlist.text()).to.equal(\"mock menu item name\").toBeTruthy;\n        //expect(wrapper.find('h2.orangify').text()).toBe(\"Cake | POS\");\n    });\n\n    // it(\"should handle the click event\", () => {\n    //     const logOutSpy = jest.spyOn(wrapper.instance(), \"logout\");\n    //     const context = {\n    //         history : {\n    //             push: jest.fn()\n    //         }\n    //     }\n    //     const logOutAuthSpy = jest.fn();\n    //\n    //     window.confirm = jest.fn(() => true);\n    //     wrapper.instance().forceUpdate();\n    //     const logoutButton = wrapper.find('#logout-btn');\n    //     expect(logOutSpy).not.toHaveBeenCalled();\n    //     logoutButton.simulate('click');\n    //     expect(logOutSpy).toHaveBeenCalledTimes(1);\n    //     expect(window.confirm).toBeCalled();\n    // })\n\n\n    // it('includes a Button to logout', () => {\n    //     const logoutButton = wrapper.find('Button').text().toBeTruthy;\n    //     logoutButton.simulate('click');\n    // });\n\n});\n"]}