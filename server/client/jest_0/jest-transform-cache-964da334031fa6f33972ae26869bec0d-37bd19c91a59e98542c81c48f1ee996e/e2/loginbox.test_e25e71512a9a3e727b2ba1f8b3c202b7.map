{"version":3,"sources":["loginbox.test.js"],"names":["describe","wrapper","initialState","email","password","validate","emailState","passwordState","errorAlert","visible","message","beforeEach","it","expect","toMatchSnapshot","logInSpy","jest","spyOn","instance","loginButton","find","toBeTruthy","not","toHaveBeenCalled","simulate","toHaveBeenCalledTimes"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;AAGAA,QAAQ,CAAC,oBAAD,EAAuB,MAAM;AAEnC,MAAIC,OAAJ;AACA,MAAIC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,EADU;AAEjBC,IAAAA,QAAQ,EAAE,EAFO;AAGjBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,UAAU,EAAE,EADJ;AAERC,MAAAA,aAAa,EAAE;AAFP,KAHO;AAOjBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE,KADC;AAEVC,MAAAA,OAAO,EAAE;AAFC;AAPK,GAAnB;AAaAC,EAAAA,UAAU,CAAC,MAAM;AACfV,IAAAA,OAAO,GAAG,qBAAQ,6BAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CAAV;AACD,GAFS,CAAV;AAKAW,EAAAA,EAAE,CAAC,yBAAD,EAA4B,MAAM;AAClCC,IAAAA,MAAM,CAAC,iCAAcZ,OAAd,CAAD,CAAN,CAA+Ba,eAA/B;AACD,GAFC,CAAF;AAKAF,EAAAA,EAAE,CAAC,oGAAD,EAAuG,MAAM;AAC7G,UAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWhB,OAAO,CAACiB,QAAR,EAAX,EAA+B,QAA/B,CAAjB;AAEA,UAAMC,WAAW,GAAGlB,OAAO,CAACmB,IAAR,CAAa,kBAAb,EAAiCC,UAArD;AACAR,IAAAA,MAAM,CAACM,WAAD,CAAN,CAAoBG,GAApB,CAAwBC,gBAAxB;AACAJ,IAAAA,WAAW,CAACK,QAAZ,CAAqB,OAArB;AACAX,IAAAA,MAAM,CAACE,QAAD,CAAN,CAAiBU,qBAAjB,CAAuC,CAAvC;AAED,GARC,CAAF;AAYD,CAtCO,CAAR","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { shallow } from 'enzyme';\nimport { LoginBox } from '../Login/LoginBox'\nimport { shallowToJson } from 'enzyme-to-json';\n\n\ndescribe(\"LoginBox Component\", () => {\n\n  let wrapper;\n  let initialState = {\n    email: '',\n    password: '',\n    validate: {\n      emailState: '',\n      passwordState: ''\n    },\n    errorAlert: {\n      visible: false,\n      message: ''\n    }\n  };\n\n  beforeEach(() => {\n    wrapper = shallow(<LoginBox />);\n  }\n  );\n\n  it(\"should render correctly\", () => {\n    expect(shallowToJson(wrapper)).toMatchSnapshot();\n  });\n\n\n  it('when submit button is clicked without username nor password emailState should be set to has-danger', () => {\n    const logInSpy = jest.spyOn(wrapper.instance(), \"logout\");\n\n    const loginButton = wrapper.find('button.login-btn').toBeTruthy;\n    expect(loginButton).not.toHaveBeenCalled();\n    loginButton.simulate('click');\n    expect(logInSpy).toHaveBeenCalledTimes(1);\n\n  });\n\n\n\n});\n"]}