var cov_1tkdukooq9=function(){var path="/home/anupamaa/Desktop/Training/pos/server/api/controllers/userController.js";var hash="8d396f671dd22d238a51a909ad4eba40b1b11f4e";var Function=function(){}.constructor;var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/anupamaa/Desktop/Training/pos/server/api/controllers/userController.js",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:32}},"1":{start:{line:2,column:12},end:{line:2,column:35}},"2":{start:{line:3,column:19},end:{line:3,column:47}},"3":{start:{line:4,column:23},end:{line:4,column:51}},"4":{start:{line:5,column:20},end:{line:5,column:54}},"5":{start:{line:8,column:0},end:{line:53,column:2}},"6":{start:{line:9,column:18},end:{line:9,column:32}},"7":{start:{line:10,column:4},end:{line:52,column:11}},"8":{start:{line:12,column:12},end:{line:17,column:13}},"9":{start:{line:13,column:16},end:{line:16,column:19}},"10":{start:{line:18,column:12},end:{line:46,column:15}},"11":{start:{line:19,column:16},end:{line:25,column:17}},"12":{start:{line:20,column:20},end:{line:24,column:23}},"13":{start:{line:26,column:16},end:{line:41,column:17}},"14":{start:{line:27,column:34},end:{line:34,column:22}},"15":{start:{line:36,column:20},end:{line:40,column:23}},"16":{start:{line:42,column:16},end:{line:45,column:19}},"17":{start:{line:49,column:12},end:{line:51,column:15}},"18":{start:{line:106,column:0},end:{line:119,column:2}},"19":{start:{line:107,column:4},end:{line:118,column:11}},"20":{start:{line:110,column:12},end:{line:112,column:15}},"21":{start:{line:115,column:12},end:{line:117,column:15}},"22":{start:{line:122,column:0},end:{line:132,column:2}},"23":{start:{line:123,column:4},end:{line:131,column:11}},"24":{start:{line:125,column:12},end:{line:125,column:49}},"25":{start:{line:128,column:12},end:{line:130,column:15}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:21},end:{line:8,column:22}},loc:{start:{line:8,column:35},end:{line:53,column:1}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:11,column:14},end:{line:11,column:15}},loc:{start:{line:11,column:24},end:{line:47,column:9}},line:11},"2":{name:"(anonymous_2)",decl:{start:{line:18,column:64},end:{line:18,column:65}},loc:{start:{line:18,column:81},end:{line:46,column:13}},line:18},"3":{name:"(anonymous_3)",decl:{start:{line:48,column:15},end:{line:48,column:16}},loc:{start:{line:48,column:24},end:{line:52,column:9}},line:48},"4":{name:"(anonymous_4)",decl:{start:{line:106,column:26},end:{line:106,column:27}},loc:{start:{line:106,column:40},end:{line:119,column:1}},line:106},"5":{name:"(anonymous_5)",decl:{start:{line:109,column:14},end:{line:109,column:15}},loc:{start:{line:109,column:20},end:{line:113,column:9}},line:109},"6":{name:"(anonymous_6)",decl:{start:{line:114,column:15},end:{line:114,column:16}},loc:{start:{line:114,column:24},end:{line:118,column:9}},line:114},"7":{name:"(anonymous_7)",decl:{start:{line:122,column:23},end:{line:122,column:24}},loc:{start:{line:122,column:37},end:{line:132,column:1}},line:122},"8":{name:"(anonymous_8)",decl:{start:{line:124,column:14},end:{line:124,column:15}},loc:{start:{line:124,column:24},end:{line:126,column:9}},line:124},"9":{name:"(anonymous_9)",decl:{start:{line:127,column:15},end:{line:127,column:16}},loc:{start:{line:127,column:24},end:{line:131,column:9}},line:127}},branchMap:{"0":{loc:{start:{line:12,column:12},end:{line:17,column:13}},type:"if",locations:[{start:{line:12,column:12},end:{line:17,column:13}},{start:{line:12,column:12},end:{line:17,column:13}}],line:12},"1":{loc:{start:{line:19,column:16},end:{line:25,column:17}},type:"if",locations:[{start:{line:19,column:16},end:{line:25,column:17}},{start:{line:19,column:16},end:{line:25,column:17}}],line:19},"2":{loc:{start:{line:26,column:16},end:{line:41,column:17}},type:"if",locations:[{start:{line:26,column:16},end:{line:41,column:17}},{start:{line:26,column:16},end:{line:41,column:17}}],line:26}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const bcrypt=(cov_1tkdukooq9.s[0]++,require('bcrypt'));const jwt=(cov_1tkdukooq9.s[1]++,require('jsonwebtoken'));const HttpStatus=(cov_1tkdukooq9.s[2]++,require('http-status-codes'));const ErrorConstants=(cov_1tkdukooq9.s[3]++,require('../errorConstants'));const UserService=(cov_1tkdukooq9.s[4]++,require('../services/userService'));cov_1tkdukooq9.s[5]++;exports.usersLogin=(req,res)=>{cov_1tkdukooq9.f[0]++;const email=(cov_1tkdukooq9.s[6]++,req.body.email);cov_1tkdukooq9.s[7]++;UserService.getUser({email:email}).then(user=>{cov_1tkdukooq9.f[1]++;cov_1tkdukooq9.s[8]++;if(user.length<1){cov_1tkdukooq9.b[0][0]++;cov_1tkdukooq9.s[9]++;return res.status(HttpStatus.UNAUTHORIZED).json({message:ErrorConstants.AUTH_FAILED.MESSAGE,code:ErrorConstants.AUTH_FAILED.CODE});}else{cov_1tkdukooq9.b[0][1]++;}cov_1tkdukooq9.s[10]++;bcrypt.compare(req.body.password,user[0].password,(err,result)=>{cov_1tkdukooq9.f[2]++;cov_1tkdukooq9.s[11]++;if(err){cov_1tkdukooq9.b[1][0]++;cov_1tkdukooq9.s[12]++;return res.status(HttpStatus.UNAUTHORIZED).json({message:ErrorConstants.AUTH_FAILED.MESSAGE,code:ErrorConstants.AUTH_FAILED.CODE});}else{cov_1tkdukooq9.b[1][1]++;}cov_1tkdukooq9.s[13]++;if(result){cov_1tkdukooq9.b[2][0]++;const token=(cov_1tkdukooq9.s[14]++,jwt.sign({email:user[0].email,userId:user[0]._id},process.env.JWT_KEY,{expiresIn:'24h'}));cov_1tkdukooq9.s[15]++;return res.status(HttpStatus.OK).json({id:user[0]._id,message:'Auth successful',token});}else{cov_1tkdukooq9.b[2][1]++;}cov_1tkdukooq9.s[16]++;res.status(HttpStatus.UNAUTHORIZED).json({message:ErrorConstants.AUTH_FAILED.MESSAGE,code:ErrorConstants.AUTH_FAILED.CODE});});}).catch(err=>{cov_1tkdukooq9.f[3]++;cov_1tkdukooq9.s[17]++;res.status(HttpStatus.INTERNAL_SERVER_ERROR).json({error:err});});};/*
    Required only for Testing. Remove!

 */ // exports.usersRegisterUser = (req, res, next) => {
//     // Ensure that two accounts are not made under the same email
//     UserService.registerUser({ email: req.body.email })
//         .then(user => {
//             if (user.length >= 1) {
//                 return res.status(409).json({   // ststus=409 conflict of resources
//                     message: "Mail exists"
//                 });
//             }
//             else {
//                 bcrypt.hash(req.body.password, 10, (err, hash) => {
//                     if (err) {
//                         return res.status(500).json({
//                             error: err
//                         });
//                     }
//                     else {
//                         const user = new User({
//                             _id: mongoose.Types.ObjectId(),
//                             username: req.body.username,
//                             email: req.body.email,
//                             password: hash
//                         });
//                         user.save()
//                             .then(result => {
//                                 console.log(result);
//                                 res.status(201).json({
//
//                                     //TODO success true
//                                     message: "User created"
//                                 });
//                             })
//                             .catch(err => {
//                                 console.log(err);
//                                 res.status(500).json({
//                                     error: err
//                                 })
//                             });
//                     }
//                 });
//             }
//         })
//         .catch();
// }
cov_1tkdukooq9.s[18]++;exports.usersDeleteUser=(req,res)=>{cov_1tkdukooq9.f[4]++;cov_1tkdukooq9.s[19]++;UserService.deleteUser({_id:req.params.userId}).exec().then(()=>{cov_1tkdukooq9.f[5]++;cov_1tkdukooq9.s[20]++;res.status(HttpStatus.OK).json({message:'User deleted'});}).catch(err=>{cov_1tkdukooq9.f[6]++;cov_1tkdukooq9.s[21]++;res.status(HttpStatus.INTERNAL_SERVER_ERROR).json({error:err});});};cov_1tkdukooq9.s[22]++;exports.usersGetUser=(req,res)=>{cov_1tkdukooq9.f[7]++;cov_1tkdukooq9.s[23]++;UserService.getAllUsers().then(docs=>{cov_1tkdukooq9.f[8]++;cov_1tkdukooq9.s[24]++;res.status(HttpStatus.OK).json(docs);}).catch(err=>{cov_1tkdukooq9.f[9]++;cov_1tkdukooq9.s[25]++;res.status(HttpStatus.INTERNAL_SERVER_ERROR).json({error:err});});};