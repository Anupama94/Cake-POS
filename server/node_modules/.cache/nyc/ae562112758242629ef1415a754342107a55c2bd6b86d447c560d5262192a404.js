var cov_1tkj05hv2y=function(){var path="/home/anupamaa/Desktop/Training/pos/server/api/controllers/orderController.js";var hash="72ddf905f8890dda4c205963767e941735ee0e34";var Function=function(){}.constructor;var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/anupamaa/Desktop/Training/pos/server/api/controllers/orderController.js",statementMap:{"0":{start:{line:1,column:19},end:{line:1,column:47}},"1":{start:{line:2,column:15},end:{line:2,column:32}},"2":{start:{line:3,column:21},end:{line:3,column:56}},"3":{start:{line:4,column:23},end:{line:4,column:51}},"4":{start:{line:6,column:15},end:{line:6,column:38}},"5":{start:{line:9,column:0},end:{line:30,column:2}},"6":{start:{line:10,column:4},end:{line:29,column:11}},"7":{start:{line:12,column:12},end:{line:21,column:13}},"8":{start:{line:13,column:16},end:{line:13,column:76}},"9":{start:{line:14,column:16},end:{line:14,column:58}},"10":{start:{line:16,column:16},end:{line:20,column:19}},"11":{start:{line:24,column:12},end:{line:24,column:88}},"12":{start:{line:25,column:12},end:{line:28,column:15}},"13":{start:{line:33,column:0},end:{line:56,column:2}},"14":{start:{line:34,column:15},end:{line:34,column:33}},"15":{start:{line:35,column:4},end:{line:55,column:11}},"16":{start:{line:37,column:12},end:{line:47,column:13}},"17":{start:{line:38,column:16},end:{line:38,column:75}},"18":{start:{line:39,column:16},end:{line:39,column:57}},"19":{start:{line:41,column:16},end:{line:41,column:64}},"20":{start:{line:42,column:16},end:{line:46,column:19}},"21":{start:{line:50,column:12},end:{line:50,column:104}},"22":{start:{line:51,column:12},end:{line:54,column:15}},"23":{start:{line:59,column:0},end:{line:78,column:2}},"24":{start:{line:60,column:15},end:{line:60,column:33}},"25":{start:{line:61,column:22},end:{line:61,column:24}},"26":{start:{line:62,column:4},end:{line:64,column:5}},"27":{start:{line:63,column:8},end:{line:63,column:39}},"28":{start:{line:65,column:4},end:{line:77,column:11}},"29":{start:{line:67,column:12},end:{line:70,column:13}},"30":{start:{line:68,column:16},end:{line:68,column:64}},"31":{start:{line:69,column:16},end:{line:69,column:55}},"32":{start:{line:73,column:12},end:{line:73,column:108}},"33":{start:{line:74,column:12},end:{line:76,column:15}},"34":{start:{line:81,column:0},end:{line:103,column:2}},"35":{start:{line:82,column:19},end:{line:82,column:36}},"36":{start:{line:83,column:4},end:{line:102,column:11}},"37":{start:{line:85,column:12},end:{line:94,column:13}},"38":{start:{line:86,column:16},end:{line:86,column:79}},"39":{start:{line:87,column:16},end:{line:87,column:58}},"40":{start:{line:89,column:16},end:{line:93,column:19}},"41":{start:{line:97,column:12},end:{line:97,column:127}},"42":{start:{line:98,column:12},end:{line:101,column:15}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:23},end:{line:9,column:24}},loc:{start:{line:9,column:37},end:{line:30,column:1}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:11,column:14},end:{line:11,column:15}},loc:{start:{line:11,column:24},end:{line:22,column:9}},line:11},"2":{name:"(anonymous_2)",decl:{start:{line:23,column:15},end:{line:23,column:16}},loc:{start:{line:23,column:24},end:{line:29,column:9}},line:23},"3":{name:"(anonymous_3)",decl:{start:{line:33,column:25},end:{line:33,column:26}},loc:{start:{line:33,column:39},end:{line:56,column:1}},line:33},"4":{name:"(anonymous_4)",decl:{start:{line:36,column:14},end:{line:36,column:15}},loc:{start:{line:36,column:23},end:{line:48,column:9}},line:36},"5":{name:"(anonymous_5)",decl:{start:{line:49,column:15},end:{line:49,column:16}},loc:{start:{line:49,column:24},end:{line:55,column:9}},line:49},"6":{name:"(anonymous_6)",decl:{start:{line:59,column:28},end:{line:59,column:29}},loc:{start:{line:59,column:42},end:{line:78,column:1}},line:59},"7":{name:"(anonymous_7)",decl:{start:{line:66,column:14},end:{line:66,column:15}},loc:{start:{line:66,column:26},end:{line:71,column:9}},line:66},"8":{name:"(anonymous_8)",decl:{start:{line:72,column:15},end:{line:72,column:16}},loc:{start:{line:72,column:24},end:{line:77,column:9}},line:72},"9":{name:"(anonymous_9)",decl:{start:{line:81,column:28},end:{line:81,column:29}},loc:{start:{line:81,column:42},end:{line:103,column:1}},line:81},"10":{name:"(anonymous_10)",decl:{start:{line:84,column:14},end:{line:84,column:15}},loc:{start:{line:84,column:24},end:{line:95,column:9}},line:84},"11":{name:"(anonymous_11)",decl:{start:{line:96,column:15},end:{line:96,column:16}},loc:{start:{line:96,column:24},end:{line:102,column:9}},line:96}},branchMap:{"0":{loc:{start:{line:12,column:12},end:{line:21,column:13}},type:"if",locations:[{start:{line:12,column:12},end:{line:21,column:13}},{start:{line:12,column:12},end:{line:21,column:13}}],line:12},"1":{loc:{start:{line:12,column:16},end:{line:12,column:41}},type:"binary-expr",locations:[{start:{line:12,column:16},end:{line:12,column:28}},{start:{line:12,column:32},end:{line:12,column:41}}],line:12},"2":{loc:{start:{line:37,column:12},end:{line:47,column:13}},type:"if",locations:[{start:{line:37,column:12},end:{line:47,column:13}},{start:{line:37,column:12},end:{line:47,column:13}}],line:37},"3":{loc:{start:{line:37,column:16},end:{line:37,column:39}},type:"binary-expr",locations:[{start:{line:37,column:16},end:{line:37,column:27}},{start:{line:37,column:31},end:{line:37,column:39}}],line:37},"4":{loc:{start:{line:67,column:12},end:{line:70,column:13}},type:"if",locations:[{start:{line:67,column:12},end:{line:70,column:13}},{start:{line:67,column:12},end:{line:70,column:13}}],line:67},"5":{loc:{start:{line:67,column:16},end:{line:67,column:45}},type:"binary-expr",locations:[{start:{line:67,column:16},end:{line:67,column:30}},{start:{line:67,column:34},end:{line:67,column:45}}],line:67},"6":{loc:{start:{line:85,column:12},end:{line:94,column:13}},type:"if",locations:[{start:{line:85,column:12},end:{line:94,column:13}},{start:{line:85,column:12},end:{line:94,column:13}}],line:85},"7":{loc:{start:{line:85,column:16},end:{line:85,column:41}},type:"binary-expr",locations:[{start:{line:85,column:16},end:{line:85,column:28}},{start:{line:85,column:32},end:{line:85,column:41}}],line:85}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const HttpStatus=(cov_1tkj05hv2y.s[0]++,require('http-status-codes'));const log4js=(cov_1tkj05hv2y.s[1]++,require('log4js'));const OrderService=(cov_1tkj05hv2y.s[2]++,require('../services/orderService'));const ErrorConstants=(cov_1tkj05hv2y.s[3]++,require('../errorConstants'));const logger=(cov_1tkj05hv2y.s[4]++,log4js.getLogger('app'));cov_1tkj05hv2y.s[5]++;exports.ordersGetAll=(req,res)=>{cov_1tkj05hv2y.f[0]++;cov_1tkj05hv2y.s[6]++;OrderService.getAllOrders().then(docs=>{cov_1tkj05hv2y.f[1]++;cov_1tkj05hv2y.s[7]++;if((cov_1tkj05hv2y.b[1][0]++,docs.success)&&(cov_1tkj05hv2y.b[1][1]++,docs.data)){cov_1tkj05hv2y.b[0][0]++;cov_1tkj05hv2y.s[8]++;logger.info('all orders successfully received in order.js');cov_1tkj05hv2y.s[9]++;res.status(HttpStatus.OK).json(docs.data);}else{cov_1tkj05hv2y.b[0][1]++;cov_1tkj05hv2y.s[10]++;res.status(HttpStatus.NOT_FOUND).json({success:false,message:ErrorConstants.ORDERS_NOT_FOUND.MESSAGE,code:ErrorConstants.ORDERS_NOT_FOUND.CODE});}}).catch(err=>{cov_1tkj05hv2y.f[2]++;cov_1tkj05hv2y.s[11]++;logger.error('error occurred while retriving all orders ',err,'order.js');cov_1tkj05hv2y.s[12]++;res.status(HttpStatus.INTERNAL_SERVER_ERROR).json({error:ErrorConstants.SERVER_ERROR.MESSAGE,code:ErrorConstants.SERVER_ERROR.CODE});});};cov_1tkj05hv2y.s[13]++;exports.ordersGetOrder=(req,res)=>{cov_1tkj05hv2y.f[3]++;const id=(cov_1tkj05hv2y.s[14]++,req.params.orderId);cov_1tkj05hv2y.s[15]++;OrderService.getOrderById(id).then(doc=>{cov_1tkj05hv2y.f[4]++;cov_1tkj05hv2y.s[16]++;if((cov_1tkj05hv2y.b[3][0]++,doc.success)&&(cov_1tkj05hv2y.b[3][1]++,doc.data)){cov_1tkj05hv2y.b[2][0]++;cov_1tkj05hv2y.s[17]++;logger.info('order by the given id successfully received');cov_1tkj05hv2y.s[18]++;res.status(HttpStatus.OK).json(doc.data);}else{cov_1tkj05hv2y.b[2][1]++;cov_1tkj05hv2y.s[19]++;logger.error('order by the given id not found');cov_1tkj05hv2y.s[20]++;res.status(HttpStatus.NOT_FOUND).json({success:false,message:ErrorConstants.ORDER_UNAVAILABLE.MESSAGE,code:ErrorConstants.ORDER_UNAVAILABLE.CODE});}}).catch(err=>{cov_1tkj05hv2y.f[5]++;cov_1tkj05hv2y.s[21]++;logger.error(`error occurred while retriving order for the item id ${id}`,err,'order.js');cov_1tkj05hv2y.s[22]++;res.status(HttpStatus.INTERNAL_SERVER_ERROR).json({error:ErrorConstants.SERVER_ERROR.MESSAGE,code:ErrorConstants.SERVER_ERROR.CODE});});};cov_1tkj05hv2y.s[23]++;exports.ordersUpdateOrder=(req,res)=>{cov_1tkj05hv2y.f[6]++;const id=(cov_1tkj05hv2y.s[24]++,req.params.orderId);const updateOps=(cov_1tkj05hv2y.s[25]++,{});cov_1tkj05hv2y.s[26]++;for(const key of Object.keys(req.body)){cov_1tkj05hv2y.s[27]++;updateOps[key]=req.body[key];}cov_1tkj05hv2y.s[28]++;OrderService.updateOrder(id,updateOps).then(result=>{cov_1tkj05hv2y.f[7]++;cov_1tkj05hv2y.s[29]++;if((cov_1tkj05hv2y.b[5][0]++,result.success)&&(cov_1tkj05hv2y.b[5][1]++,result.data)){cov_1tkj05hv2y.b[4][0]++;cov_1tkj05hv2y.s[30]++;logger.info(`order ${id} successfully updated`);cov_1tkj05hv2y.s[31]++;res.status(HttpStatus.OK).json(result);}else{cov_1tkj05hv2y.b[4][1]++;}}).catch(err=>{cov_1tkj05hv2y.f[8]++;cov_1tkj05hv2y.s[32]++;logger.error(`error occurred while updating the order for the order id ${id}`,err,'order.js');cov_1tkj05hv2y.s[33]++;res.status(HttpStatus.INTERNAL_SERVER_ERROR).json({error:err});});};cov_1tkj05hv2y.s[34]++;exports.ordersGetByUserId=(req,res)=>{cov_1tkj05hv2y.f[9]++;const userId=(cov_1tkj05hv2y.s[35]++,req.params.userId);cov_1tkj05hv2y.s[36]++;OrderService.getOrdersByCreator(userId).then(docs=>{cov_1tkj05hv2y.f[10]++;cov_1tkj05hv2y.s[37]++;if((cov_1tkj05hv2y.b[7][0]++,docs.success)&&(cov_1tkj05hv2y.b[7][1]++,docs.data)){cov_1tkj05hv2y.b[6][0]++;cov_1tkj05hv2y.s[38]++;logger.info(`orders of user ${userId} successfully retrieved`);cov_1tkj05hv2y.s[39]++;res.status(HttpStatus.OK).json(docs.data);}else{cov_1tkj05hv2y.b[6][1]++;cov_1tkj05hv2y.s[40]++;res.status(HttpStatus.NOT_FOUND).json({success:false,message:ErrorConstants.ORDERS_NOT_FOUND.MESSAGE,code:ErrorConstants.ORDERS_NOT_FOUND.CODE});}}).catch(err=>{cov_1tkj05hv2y.f[11]++;cov_1tkj05hv2y.s[41]++;logger.error(`error occurred while retriving order for the order of the given user_id ${userId}`,err,'order.js');cov_1tkj05hv2y.s[42]++;res.status(HttpStatus.INTERNAL_SERVER_ERROR).json({error:ErrorConstants.SERVER_ERROR.MESSAGE,code:ErrorConstants.SERVER_ERROR.CODE});});};/*
    Required only for Testing.
        Remove!
*/ // exports.ordersCreateOrder = (req, res) => {
//     if (validateOrderService.validateOrderCreation) {
//         OrderService.createOrder(req)
//             .then((result) => {
//                 if (result.success) {
//                     res.status(HttpStatus.CREATED).json({
//                         message: 'Succefully created a new order',
//                         createdItem: result.data
//                     });
//                 }
//             })
//             .catch((err) => {
//                 res.status(HttpStatus.INTERNAL_SERVER_ERROR).json({
//                     error: err
//                 });
//             });
//     } else {
//         res.status(HttpStatus.BAD_REQUEST).json({
//             message: 'Inavlid parameters'
//         });
//     }
// };
//
//
// exports.orderDeleteOrder = (req, res) => {
//     const id = req.params.orderId;
//     Order.remove({ _id: id })
//         .exec()
//         .then((result) => {
//             res.status(HttpStatus.OK).json(result);
//         })
//         .catch((err) => {
//             res.status(HttpStatus.INTERNAL_SERVER_ERROR).json({ error: err });
//         });
// };