b2e003ac99f96bc761775b92ea62eed6
"use strict";

var _interopRequireDefault = require("/home/anupamaa/Desktop/Training/pos/server/client/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _enzyme = require("enzyme");

var _Header = _interopRequireDefault(require("./Header"));

var _enzymeToJson = require("enzyme-to-json");

var _jsxFileName = "/home/anupamaa/Desktop/Training/pos/server/client/src/components/Shared/Header.test.js";
describe("<Header />", () => {
  let wrapper;
  beforeEach(() => {
    wrapper = (0, _enzyme.shallow)(_react.default.createElement(_Header.default, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 13
      },
      __self: void 0
    }));
  });
  it("should render correctly", () => {
    expect((0, _enzymeToJson.shallowToJson)(wrapper)).toMatchSnapshot();
  });
  it('includes an h2 tag that specifies the application name', () => {
    expect(wrapper.find('h2.orangify').text()).toBe("Cake | POS");
  });
  it("should handle the click event", () => {
    const logOutSpy = jest.spyOn(wrapper.instance(), "logout");
    const context = {
      history: {
        push: jest.fn()
      }
    };
    const logOutAuthSpy = jest.fn();
    window.confirm = jest.fn(() => true);
    wrapper.instance().forceUpdate();
    const logoutButton = wrapper.find('#logout-btn');
    expect(logOutSpy).not.toHaveBeenCalled();
    logoutButton.simulate('click');
    expect(logOutSpy).toHaveBeenCalledTimes(1);
    expect(window.confirm).toBeCalled();
    expect(logOutAuthSpy()).toBeCalled();
  }); // it('includes a Button to logout', () => {
  //     const logoutButton = wrapper.find('Button').text().toBeTruthy;
  //     logoutButton.simulate('click');
  // });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkhlYWRlci50ZXN0LmpzIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwid3JhcHBlciIsImJlZm9yZUVhY2giLCJpdCIsImV4cGVjdCIsInRvTWF0Y2hTbmFwc2hvdCIsImZpbmQiLCJ0ZXh0IiwidG9CZSIsImxvZ091dFNweSIsImplc3QiLCJzcHlPbiIsImluc3RhbmNlIiwiY29udGV4dCIsImhpc3RvcnkiLCJwdXNoIiwiZm4iLCJsb2dPdXRBdXRoU3B5Iiwid2luZG93IiwiY29uZmlybSIsImZvcmNlVXBkYXRlIiwibG9nb3V0QnV0dG9uIiwibm90IiwidG9IYXZlQmVlbkNhbGxlZCIsInNpbXVsYXRlIiwidG9IYXZlQmVlbkNhbGxlZFRpbWVzIiwidG9CZUNhbGxlZCJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOzs7QUFHQUEsUUFBUSxDQUFDLFlBQUQsRUFBZSxNQUFNO0FBRXpCLE1BQUlDLE9BQUo7QUFFQUMsRUFBQUEsVUFBVSxDQUFDLE1BQU07QUFBRUQsSUFBQUEsT0FBTyxHQUFHLHFCQUFRLDZCQUFDLGVBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsTUFBUixDQUFWO0FBQWdDLEdBQXpDLENBQVY7QUFFQUUsRUFBQUEsRUFBRSxDQUFDLHlCQUFELEVBQTRCLE1BQU07QUFDaENDLElBQUFBLE1BQU0sQ0FBQyxpQ0FBY0gsT0FBZCxDQUFELENBQU4sQ0FBK0JJLGVBQS9CO0FBQ0gsR0FGQyxDQUFGO0FBS0FGLEVBQUFBLEVBQUUsQ0FBQyx3REFBRCxFQUEyRCxNQUFNO0FBRS9EQyxJQUFBQSxNQUFNLENBQUNILE9BQU8sQ0FBQ0ssSUFBUixDQUFhLGFBQWIsRUFBNEJDLElBQTVCLEVBQUQsQ0FBTixDQUEyQ0MsSUFBM0MsQ0FBZ0QsWUFBaEQ7QUFDSCxHQUhDLENBQUY7QUFLQUwsRUFBQUEsRUFBRSxDQUFDLCtCQUFELEVBQWtDLE1BQU07QUFDdEMsVUFBTU0sU0FBUyxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV1YsT0FBTyxDQUFDVyxRQUFSLEVBQVgsRUFBK0IsUUFBL0IsQ0FBbEI7QUFDQSxVQUFNQyxPQUFPLEdBQUc7QUFDWkMsTUFBQUEsT0FBTyxFQUFHO0FBQ05DLFFBQUFBLElBQUksRUFBRUwsSUFBSSxDQUFDTSxFQUFMO0FBREE7QUFERSxLQUFoQjtBQUtBLFVBQU1DLGFBQWEsR0FBR1AsSUFBSSxDQUFDTSxFQUFMLEVBQXRCO0FBRUFFLElBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlQsSUFBSSxDQUFDTSxFQUFMLENBQVEsTUFBTSxJQUFkLENBQWpCO0FBQ0FmLElBQUFBLE9BQU8sQ0FBQ1csUUFBUixHQUFtQlEsV0FBbkI7QUFDQSxVQUFNQyxZQUFZLEdBQUdwQixPQUFPLENBQUNLLElBQVIsQ0FBYSxhQUFiLENBQXJCO0FBQ0FGLElBQUFBLE1BQU0sQ0FBQ0ssU0FBRCxDQUFOLENBQWtCYSxHQUFsQixDQUFzQkMsZ0JBQXRCO0FBQ0FGLElBQUFBLFlBQVksQ0FBQ0csUUFBYixDQUFzQixPQUF0QjtBQUNBcEIsSUFBQUEsTUFBTSxDQUFDSyxTQUFELENBQU4sQ0FBa0JnQixxQkFBbEIsQ0FBd0MsQ0FBeEM7QUFDQXJCLElBQUFBLE1BQU0sQ0FBQ2MsTUFBTSxDQUFDQyxPQUFSLENBQU4sQ0FBdUJPLFVBQXZCO0FBQ0F0QixJQUFBQSxNQUFNLENBQUNhLGFBQWEsRUFBZCxDQUFOLENBQXdCUyxVQUF4QjtBQUNILEdBakJDLENBQUYsQ0FoQnlCLENBb0N6QjtBQUNBO0FBQ0E7QUFDQTtBQUVILENBekNPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5cbmltcG9ydCB7IHNoYWxsb3cgfSBmcm9tICdlbnp5bWUnO1xuaW1wb3J0IEhlYWRlciBmcm9tICcuL0hlYWRlcic7XG5pbXBvcnQgeyBzaGFsbG93VG9Kc29uIH0gZnJvbSAnZW56eW1lLXRvLWpzb24nO1xuXG5cbmRlc2NyaWJlKFwiPEhlYWRlciAvPlwiLCAoKSA9PiB7XG5cbiAgICBsZXQgd3JhcHBlcjtcblxuICAgIGJlZm9yZUVhY2goKCkgPT4geyB3cmFwcGVyID0gc2hhbGxvdyg8SGVhZGVyIC8+KTsgfSk7XG5cbiAgICBpdChcInNob3VsZCByZW5kZXIgY29ycmVjdGx5XCIsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KHNoYWxsb3dUb0pzb24od3JhcHBlcikpLnRvTWF0Y2hTbmFwc2hvdCgpO1xuICAgIH0pO1xuXG5cbiAgICBpdCgnaW5jbHVkZXMgYW4gaDIgdGFnIHRoYXQgc3BlY2lmaWVzIHRoZSBhcHBsaWNhdGlvbiBuYW1lJywgKCkgPT4ge1xuXG4gICAgICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoJ2gyLm9yYW5naWZ5JykudGV4dCgpKS50b0JlKFwiQ2FrZSB8IFBPU1wiKTtcbiAgICB9KTtcblxuICAgIGl0KFwic2hvdWxkIGhhbmRsZSB0aGUgY2xpY2sgZXZlbnRcIiwgKCkgPT4ge1xuICAgICAgICBjb25zdCBsb2dPdXRTcHkgPSBqZXN0LnNweU9uKHdyYXBwZXIuaW5zdGFuY2UoKSwgXCJsb2dvdXRcIik7XG4gICAgICAgIGNvbnN0IGNvbnRleHQgPSB7XG4gICAgICAgICAgICBoaXN0b3J5IDoge1xuICAgICAgICAgICAgICAgIHB1c2g6IGplc3QuZm4oKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGxvZ091dEF1dGhTcHkgPSBqZXN0LmZuKCk7XG5cbiAgICAgICAgd2luZG93LmNvbmZpcm0gPSBqZXN0LmZuKCgpID0+IHRydWUpXG4gICAgICAgIHdyYXBwZXIuaW5zdGFuY2UoKS5mb3JjZVVwZGF0ZSgpO1xuICAgICAgICBjb25zdCBsb2dvdXRCdXR0b24gPSB3cmFwcGVyLmZpbmQoJyNsb2dvdXQtYnRuJyk7XG4gICAgICAgIGV4cGVjdChsb2dPdXRTcHkpLm5vdC50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gICAgICAgIGxvZ291dEJ1dHRvbi5zaW11bGF0ZSgnY2xpY2snKTtcbiAgICAgICAgZXhwZWN0KGxvZ091dFNweSkudG9IYXZlQmVlbkNhbGxlZFRpbWVzKDEpO1xuICAgICAgICBleHBlY3Qod2luZG93LmNvbmZpcm0pLnRvQmVDYWxsZWQoKTtcbiAgICAgICAgZXhwZWN0KGxvZ091dEF1dGhTcHkoKSkudG9CZUNhbGxlZCgpO1xuICAgIH0pXG5cblxuICAgIC8vIGl0KCdpbmNsdWRlcyBhIEJ1dHRvbiB0byBsb2dvdXQnLCAoKSA9PiB7XG4gICAgLy8gICAgIGNvbnN0IGxvZ291dEJ1dHRvbiA9IHdyYXBwZXIuZmluZCgnQnV0dG9uJykudGV4dCgpLnRvQmVUcnV0aHk7XG4gICAgLy8gICAgIGxvZ291dEJ1dHRvbi5zaW11bGF0ZSgnY2xpY2snKTtcbiAgICAvLyB9KTtcblxufSk7XG5cblxuIl19