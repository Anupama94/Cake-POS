{"version":3,"sources":["callApi.test.js"],"names":["describe","it","jest","unmock","services","require","postCall","sinon","stub","withArgs","email","password","returns","Promise","resolve","status","then","response","expect","toHaveBeenCalledTimes","catch"],"mappings":";;;;AA6BA;;AACA;;AACA;;AACA;;AACA;;AAjCA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAUA;AACAA,QAAQ,CAAC,wBAAD,EAA2B,YAAY;AAE3CA,EAAAA,QAAQ,CAAC,qBAAD,EAAwB,YAAY;AAExCC,IAAAA,EAAE,CAAC,uCAAD,EAA0C,MAAM;AAC9CC,MAAAA,IAAI,CAACC,MAAL,CAAY,yBAAZ;;AACA,YAAMC,QAAQ,GAAGC,OAAO,CAAC,yBAAD,CAAxB;;AACAD,MAAAA,QAAQ,CAACE,QAAT,GAAoBC,eAAMC,IAAN,EAApB;AACAJ,MAAAA,QAAQ,CAACE,QAAT,CAAkBG,QAAlB,CAA2B,aAA3B,EAA0C;AAACC,QAAAA,KAAK,EAAE,cAAR;AAAwBC,QAAAA,QAAQ,EAAE;AAAlC,OAA1C,EAAoFC,OAApF,CAA4FC,OAAO,CAACC,OAAR,CAAgB;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAhB,CAA5F;AAEA,aAAO,wBAAU;AAACL,QAAAA,KAAK,EAAE,cAAR;AAAwBC,QAAAA,QAAQ,EAAE;AAAlC,OAAV,EACNK,IADM,CACDC,QAAQ,IAAI;AACdC,QAAAA,MAAM,CAACd,QAAQ,CAACE,QAAV,CAAN,CAA0Ba,qBAA1B,CAAgD,CAAhD;AACH,OAHM,EAINC,KAJM,CAIA,MAAM,CAAE,CAJR,CAAP;AAKC,KAXH,CAAF;AAcC,GAhBG,CAAR;AAiBC,CAnBG,CAAR,C,CAuBA;AACA;AACA","sourcesContent":["// import { userLogin } from '../../apiCalls/callApi';\n// import { error } from '../../apiCalls/errorConstants';\n// import HttpStatus from 'http-status-codes';\n// import mockAxios from 'axios';\n\n// describe(\"LoginBox Component\", () => {\n\n\n//   it(\"calls axios getCall and returns users\", async () => {\n//     mockAxios.post.mockImplementationOnce(() => Promise.resolve({\n\n//             status: HttpStatus.OK\n\n//     }));\n\n//     const login = userLogin({email: \"abcd@123.com\", password: \"abc\"})\n//     .then(response => {\n//         expect(mockAxios.post).toHaveBeenCalledTimes(0);\n//         expect(response.status).toBe(HttpStatus.OK);\n//         expect(mockAxios.post).toHaveBeenCalledWith(true);\n//     })\n//     .catch(err => {});\n\n\n//   });\n\n// });\n\n\nimport axios from 'axios';\nimport moxios from 'moxios';\nimport sinon from 'sinon';\nimport { userLogin } from '../../apiCalls/callApi';\nimport { postCall } from '../../apiCalls/services';\n\n\n//jest.mock('../../apiCalls/services');\ndescribe('mocking axios requests', function () {\n\n    describe('across entire suite', function () {\n\n        it('calls axios getCall and returns users', () => {\n            jest.unmock('../../apiCalls/services');\n            const services = require('../../apiCalls/services');\n            services.postCall = sinon.stub();\n            services.postCall.withArgs(\"users/login\", {email: \"abcd@123.com\", password: \"abc\"}).returns(Promise.resolve({status: '200 OK'}));\n\n            return userLogin({email: \"abcd@123.com\", password: \"abc\"})\n            .then(response => {\n                expect(services.postCall).toHaveBeenCalledTimes(0);\n            })\n            .catch(() => {});\n            })\n\n\n        })\n    })\n\n\n\n// export default {\n//     post: jest.fn((url, data) => Promise.resolve({response: {status: \"200 OK\"}}))\n// }\n"]}