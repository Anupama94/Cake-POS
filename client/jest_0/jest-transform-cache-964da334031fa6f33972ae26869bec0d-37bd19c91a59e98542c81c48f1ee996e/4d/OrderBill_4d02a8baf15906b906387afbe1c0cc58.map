{"version":3,"sources":["OrderBill.js"],"names":["OrderBill","React","Component","constructor","props","logicToIncrement","id","Promise","resolve","reject","index","getIndexOfSelectedItemFromItems","order","Object","assign","state","selectedOrder","quantity","selected","total","totalPayable","product","price","setState","items","totalPrice","decrementQuantity","e","logicToDecrement","then","updatedOrder","updateDB","updateStateBeforeDelete","splice","newTotal","deleteItem","updateOrderStatus","status","closeOrder","console","log","context","router","history","push","loadOrderBill","backgroundColor","map","item","color","bind","_id","name","incrementQuantity","selectedOrderId","orderId","componentDidMount","getOrderItemsAndSetState","result","data","componentWillReceiveProps","nextProps","clickCounter","receiveSelectedFoodItem","newItemToBeAdded","findIndex","addItemToOrder","updatedItems","res","caltotalPrice","newItemsArray","render","contextTypes","PropTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Card, CardText, Button, Col, Row,\n    CardHeader, CardBody, Table, CardFooter,\n    ButtonGroup\n} from 'reactstrap';\nimport { FaWindowClose, FaChevronUp, FaChevronDown } from 'react-icons/fa';\nimport './OrderDetails.css';\nimport PropTypes from 'prop-types';\nimport { getOrderItems, updateOrder } from \"../../apiCalls/callApi\";\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\n\n\n\nclass OrderBill extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedOrderId: props.orderId,\n            selectedOrder: [],\n            totalPayable: 0,\n            status: \"\"\n        };\n\n        this.updateStateBeforeDelete = this.updateStateBeforeDelete.bind(this);\n        this.deleteItem = this.deleteItem.bind(this);\n    }\n\n    componentDidMount() {\n        this.getOrderItemsAndSetState();\n\n    }\n\n    getOrderItemsAndSetState() {\n        getOrderItems(this.state.selectedOrderId)\n            .then((result) => {\n                    this.setState({ selectedOrder: result.data.items, totalPayable: result.data.totalPrice, status: result.data.status });\n                }\n\n            );\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.clickCounter !== this.props.clickCounter){\n            console.log(\"nextProps\", nextProps);\n            console.log(nextProps.receiveSelectedFoodItem);\n            let newItemToBeAdded = { quantity: 1, product: nextProps.receiveSelectedFoodItem._id };\n\n            let index = this.state.selectedOrder.findIndex((order) => {\n                return order.product._id === newItemToBeAdded.product;\n            });\n            console.log(\"INDEXXXX\", index);\n            if (index !== -1) {\n                console.log(\"exists\");\n                this.incrementQuantity(this.state.selectedOrder[index]._id);\n                \n            }\n            else {\n                this.addItemToOrder(newItemToBeAdded).then((updatedItems) => {\n                    this.updateDB(updatedItems).then((res) => {\n                        console.log(\"YAYYYYY\");\n                        this.getOrderItemsAndSetState();\n                    })\n                });\n            }\n        }\n\n    }\n    addItemToOrder(newItemToBeAdded) {\n\n        return new Promise((resolve, reject) => {\n            let caltotalPrice = 0;\n            let newItemsArray = this.state.selectedOrder.map(function (item) {\n                caltotalPrice = caltotalPrice + (item.quantity * item.product.price);\n                return {\n                    product: item.product._id,\n                    quantity: item.quantity\n                };\n            });\n            newItemsArray.push(newItemToBeAdded);\n            resolve({ items: newItemsArray, totalPrice: caltotalPrice });\n        });\n    }\n\n\n    static contextTypes = {\n        router: PropTypes.object\n    }\n\n    incrementQuantity(id){\n        this.logicToIncrement(id).then((updatedOrder) => {\n            this.updateDB(updatedOrder);\n        });\n    }\n\n    getIndexOfSelectedItemFromItems(id) {\n        let index = this.state.selectedOrder.findIndex((order) => {\n            return order._id === id;\n        });\n        return index;\n    }\n\n    logicToIncrement = (id) => {\n        return new Promise((resolve, reject) => {\n\n            let index = this.getIndexOfSelectedItemFromItems(id);\n            let order = Object.assign({}, this.state.selectedOrder[index]);\n            order.quantity = order.quantity + 1;\n\n            let selected = Object.assign([], this.state.selectedOrder);\n            selected[index] = order;\n\n            let total = this.state.totalPayable + order.product.price;\n            this.setState({ selectedOrder: selected, totalPayable: total });\n            resolve({ items: selected, totalPrice: total });\n\n        });\n    }\n\n\n    updateDB(updatedOrder) {\n        return new Promise((resolve, reject) => {\n            updateOrder(this.state.selectedOrderId, updatedOrder)\n                .then(res => {\n                    resolve(res);\n                });\n        });\n\n    }\n\n\n    decrementQuantity = (id, e) => {\n        this.logicToDecrement(id).then((updatedOrder) => {\n            this.updateDB(updatedOrder);\n        });\n\n    }\n\n    logicToDecrement(id) {\n        return new Promise((resolve, reject) => {\n\n            let index = this.getIndexOfSelectedItemFromItems(id);\n            let order = Object.assign({}, this.state.selectedOrder[index]);\n            if (order.quantity !== 0) {\n                order.quantity = order.quantity - 1;\n                let total = this.state.totalPayable - order.product.price;\n                let selected = Object.assign([], this.state.selectedOrder);\n                selected[index] = order;\n\n\n                this.setState({ selectedOrder: selected, totalPayable: total });\n                resolve({ items: selected, totalPrice: total });\n            }\n        });\n    }\n\n    updateStateBeforeDelete = (index) => {\n        return new Promise((resolve, reject) => {\n            let selected = Object.assign([], this.state.selectedOrder);\n            selected.splice(index, 1);\n            //total price is also affected\n            let newTotal = this.state.totalPayable - (this.state.selectedOrder[index].product.price * this.state.selectedOrder[index].quantity);\n            this.setState({ selectedOrder: selected, totalPayable: newTotal });\n            resolve({ items: selected, totalPrice: newTotal });\n\n        });\n    };\n\n\n    deleteItem = (id, e) => {\n\n        let index = this.getIndexOfSelectedItemFromItems(id);\n\n        this.updateStateBeforeDelete(index).then(updatedOrder => {\n            this.updateDB(updatedOrder);\n        });\n    }\n\n    updateOrderStatus = () => {\n        return new Promise((resolve, reject) => {\n            this.setState({ status: \"closed\" });\n            resolve({ status: \"closed\" });\n\n        });\n    }\n\n    closeOrder = () => {\n        this.updateOrderStatus().then(updatedOrder => {\n            console.log(\"UPDATED ORDER\", updatedOrder);\n            this.updateDB(updatedOrder);\n            console.log(\"one\", );\n        }).then(() => {\n            console.log(\"two\");\n            this.context.router.history.push(\"/OrderList\");\n        });\n\n\n    }\n\n\n    loadOrderBill = () => {\n        return(\n            <Table  >\n            <thead style={{ backgroundColor: \"orange\" }}>\n    <tr>\n        <th>X</th>\n        <th>Product</th>\n        <th>Quantity</th>\n        <th>Price</th>\n        </tr>\n        </thead>\n\n        <tbody>\n            {this.state.selectedOrder.map((item) => {\n                    return (<tr key={this.state.selectedOrder.id}>\n                        <th scope=\"row\"><FaWindowClose style={{ color: \"red\" }} onClick={this.deleteItem.bind(this, item._id)} />\n\n                    </th>\n                    <th value={item.product.name}>{item.product.name}</th>\n                        <td value={item.quantity}>{item.quantity}\n                        <ButtonGroup className=\"btn-space\" size=\"sm\" >\n                        <Button outline color=\"warning\" onClick={this.incrementQuantity.bind(this, item._id)}><FaChevronUp /></Button>\n                        <Button outline onClick={this.decrementQuantity.bind(this, item._id)}><FaChevronDown /></Button>\n                        </ButtonGroup></td>\n                    <td value={item.product.price * item.quantity}>{item.product.price * item.quantity}</td>\n                        </tr>);\n                })}\n            </tbody>\n        </Table>\n        )\n    }\n\n\n\n    render() {\n        return (\n            <div>\n\n            <Card outline color=\"secondary\" >\n            <CardHeader tag=\"h3\" style={{ backgroundColor: \"grey\" }}>\n    <Row>\n        <Col md=\"6\">Order Details</Col>\n        <Col md=\"6\" >  <Button className=\"float-right\" outline color=\"danger\" style={{ color: \"orange\" }} onClick={this.closeOrder.bind(this)}>CLOSE ORDER</Button>\n        </Col>\n        </Row>\n        </CardHeader>\n\n        <CardBody >\n        <CardText>\n            <div id=\"scrollableContainer\">\n\n        {this.loadOrderBill()}\n\n\n\n            </div>\n        </CardText>\n        </CardBody>\n\n        <CardFooter style={{ backgroundColor: \"grey\" }}>\n    <Row>\n        <Col md=\"6\">\n\n            </Col>\n            <Col md=\"6\">\n            <h5>Total Payable: Rs. <strong style={{ color: \"orange\" }}>{this.state.totalPayable}</strong></h5>\n\n        </Col>\n        </Row>\n        </CardFooter>\n        </Card>\n        </div >\n\n    );\n    }\n\n}\n\nexport default OrderBill;\n\n"]}