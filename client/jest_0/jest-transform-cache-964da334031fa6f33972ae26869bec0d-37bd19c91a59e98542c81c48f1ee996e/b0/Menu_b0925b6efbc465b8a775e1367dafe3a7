511b0cf415e4d2bc0f3ba2a8da130825
"use strict";

var _interopRequireDefault = require("/home/anupamaa/Desktop/Training/pos/server/client/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactstrap = require("reactstrap");

var _callApi = require("../../apiCalls/callApi");

require("./OrderDetails.css");

var _jsxFileName = "/home/anupamaa/Desktop/Training/pos/server/client/src/components/OrderDetails/Menu.js";

class Menu extends _react.default.Component {
  constructor(props) {
    super(props);

    this.sendMenuItem = (id, e) => {
      let index = this.state.items.findIndex(item => {
        return item._id === id;
      });
      let selectedItem = Object.assign({}, this.state.items[index]);
      this.props.sendMenuItem(selectedItem);
    };

    this.loadMenuItem = () => {
      return _react.default.createElement("div", {
        id: "scrollableContainer",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 39
        },
        __self: this
      }, this.state.items.map(item => {
        if (!item.length && item.category == "food") {
          return _react.default.createElement(_reactstrap.ListGroupItem, {
            key: item._id,
            style: {
              backgroundColor: "grey"
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 42
            },
            __self: this
          }, _react.default.createElement(_reactstrap.ListGroupItem, {
            className: "foodList",
            tag: "a",
            href: "#",
            action: true,
            scope: "row",
            style: {
              color: "orange"
            },
            onClick: this.sendMenuItem.bind(this, item._id),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 43
            },
            __self: this
          }, _react.default.createElement("strong", {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 43
            },
            __self: this
          }, item.name)));
        }
      }));
    };

    this.state = {
      items: []
    };
  }

  componentDidMount() {
    (0, _callApi.getMenuItems)().then(response => {
      this.setState({
        items: response.data.items
      });
    });
  }

  render() {
    return _react.default.createElement("div", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 57
      },
      __self: this
    }, _react.default.createElement(_reactstrap.Card, {
      outline: true,
      color: "secondary",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 60
      },
      __self: this
    }, _react.default.createElement(_reactstrap.CardHeader, {
      tag: "h3",
      style: {
        backgroundColor: "grey"
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 61
      },
      __self: this
    }, "Menu"), _react.default.createElement(_reactstrap.Row, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 62
      },
      __self: this
    }, _react.default.createElement(_reactstrap.Col, {
      xs: "6",
      sm: "6",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 64
      },
      __self: this
    }, _react.default.createElement(_reactstrap.ListGroup, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 65
      },
      __self: this
    }, _react.default.createElement(_reactstrap.ListGroupItem, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 66
      },
      __self: this
    }, _react.default.createElement(_reactstrap.ListGroupItemHeading, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 67
      },
      __self: this
    }, "Food"), _react.default.createElement("div", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 68
      },
      __self: this
    }, this.loadMenuItem)))), _react.default.createElement(_reactstrap.Col, {
      xs: "6",
      sm: "6",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 74
      },
      __self: this
    }, _react.default.createElement(_reactstrap.ListGroup, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 75
      },
      __self: this
    }, _react.default.createElement(_reactstrap.ListGroupItem, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 76
      },
      __self: this
    }, _react.default.createElement(_reactstrap.ListGroupItemHeading, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 77
      },
      __self: this
    }, "Beverages"), _react.default.createElement("div", {
      id: "scrollableContainer",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 78
      },
      __self: this
    }, this.state.items.map(item => {
      if (!item.length && item.category == "beverage") {
        return _react.default.createElement(_reactstrap.ListGroupItem, {
          key: item._id,
          style: {
            backgroundColor: "grey"
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 81
          },
          __self: this
        }, _react.default.createElement(_reactstrap.ListGroupItem, {
          tag: "a",
          href: "#",
          action: true,
          style: {
            color: "orange"
          },
          scope: "row",
          onClick: this.sendMenuItem.bind(this, item._id),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 82
          },
          __self: this
        }, _react.default.createElement("strong", {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 82
          },
          __self: this
        }, item.name)));
      }
    }))))))));
  }

}

var _default = Menu;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,