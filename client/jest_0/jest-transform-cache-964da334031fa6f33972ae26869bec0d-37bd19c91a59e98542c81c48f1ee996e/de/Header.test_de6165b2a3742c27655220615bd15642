d3f977c8cc55c3a895018b10bcaf47b8
"use strict";

var _interopRequireDefault = require("/home/anupamaa/Desktop/Training/pos/server/client/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _enzyme = require("enzyme");

var _Header = _interopRequireDefault(require("./Header"));

var _enzymeToJson = require("enzyme-to-json");

var _jsxFileName = "/home/anupamaa/Desktop/Training/pos/server/client/src/components/Shared/Header.test.js";
describe("<Header />", () => {
  let wrapper;
  beforeEach(() => {
    wrapper = (0, _enzyme.shallow)(_react.default.createElement(_Header.default, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 13
      },
      __self: void 0
    }));
  });
  it("should render correctly", () => {
    expect((0, _enzymeToJson.shallowToJson)(wrapper)).toMatchSnapshot();
  });
  it('includes an h2 tag that specifies the application name', () => {
    expect(wrapper.find('h2.orangify').text()).toBe("Cake | POS");
  });
  it("should handle the click event", () => {
    const logOutSpy = jest.spyOn(wrapper.instance(), "logout");
    const history = {
      push: jest.fn()
    };
    const logOutAuthSpy = jest.fn(history.push);
    window.confirm = jest.fn(() => true);
    wrapper.instance().forceUpdate();
    const logoutButton = wrapper.find('#logout-btn');
    expect(logOutSpy).not.toHaveBeenCalled();
    logoutButton.simulate('click');
    expect(logOutSpy).toHaveBeenCalledTimes(1);
    expect(window.confirm).toBeCalled();
    expect(logOutAuthSpy).toHaveBennCalled();
  }); // it('includes a Button to logout', () => {
  //     const logoutButton = wrapper.find('Button').text().toBeTruthy;
  //     logoutButton.simulate('click');
  // });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkhlYWRlci50ZXN0LmpzIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwid3JhcHBlciIsImJlZm9yZUVhY2giLCJpdCIsImV4cGVjdCIsInRvTWF0Y2hTbmFwc2hvdCIsImZpbmQiLCJ0ZXh0IiwidG9CZSIsImxvZ091dFNweSIsImplc3QiLCJzcHlPbiIsImluc3RhbmNlIiwiaGlzdG9yeSIsInB1c2giLCJmbiIsImxvZ091dEF1dGhTcHkiLCJ3aW5kb3ciLCJjb25maXJtIiwiZm9yY2VVcGRhdGUiLCJsb2dvdXRCdXR0b24iLCJub3QiLCJ0b0hhdmVCZWVuQ2FsbGVkIiwic2ltdWxhdGUiLCJ0b0hhdmVCZWVuQ2FsbGVkVGltZXMiLCJ0b0JlQ2FsbGVkIiwidG9IYXZlQmVubkNhbGxlZCJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOzs7QUFHQUEsUUFBUSxDQUFDLFlBQUQsRUFBZSxNQUFNO0FBRXpCLE1BQUlDLE9BQUo7QUFFQUMsRUFBQUEsVUFBVSxDQUFDLE1BQU07QUFBRUQsSUFBQUEsT0FBTyxHQUFHLHFCQUFRLDZCQUFDLGVBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsTUFBUixDQUFWO0FBQWdDLEdBQXpDLENBQVY7QUFFQUUsRUFBQUEsRUFBRSxDQUFDLHlCQUFELEVBQTRCLE1BQU07QUFDaENDLElBQUFBLE1BQU0sQ0FBQyxpQ0FBY0gsT0FBZCxDQUFELENBQU4sQ0FBK0JJLGVBQS9CO0FBQ0gsR0FGQyxDQUFGO0FBS0FGLEVBQUFBLEVBQUUsQ0FBQyx3REFBRCxFQUEyRCxNQUFNO0FBRS9EQyxJQUFBQSxNQUFNLENBQUNILE9BQU8sQ0FBQ0ssSUFBUixDQUFhLGFBQWIsRUFBNEJDLElBQTVCLEVBQUQsQ0FBTixDQUEyQ0MsSUFBM0MsQ0FBZ0QsWUFBaEQ7QUFDSCxHQUhDLENBQUY7QUFLQUwsRUFBQUEsRUFBRSxDQUFDLCtCQUFELEVBQWtDLE1BQU07QUFDdEMsVUFBTU0sU0FBUyxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV1YsT0FBTyxDQUFDVyxRQUFSLEVBQVgsRUFBK0IsUUFBL0IsQ0FBbEI7QUFDQSxVQUFNQyxPQUFPLEdBQUc7QUFDWkMsTUFBQUEsSUFBSSxFQUFFSixJQUFJLENBQUNLLEVBQUw7QUFETSxLQUFoQjtBQUdBLFVBQU1DLGFBQWEsR0FBR04sSUFBSSxDQUFDSyxFQUFMLENBQVFGLE9BQU8sQ0FBQ0MsSUFBaEIsQ0FBdEI7QUFFQUcsSUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUixJQUFJLENBQUNLLEVBQUwsQ0FBUSxNQUFNLElBQWQsQ0FBakI7QUFDQWQsSUFBQUEsT0FBTyxDQUFDVyxRQUFSLEdBQW1CTyxXQUFuQjtBQUNBLFVBQU1DLFlBQVksR0FBR25CLE9BQU8sQ0FBQ0ssSUFBUixDQUFhLGFBQWIsQ0FBckI7QUFDQUYsSUFBQUEsTUFBTSxDQUFDSyxTQUFELENBQU4sQ0FBa0JZLEdBQWxCLENBQXNCQyxnQkFBdEI7QUFDQUYsSUFBQUEsWUFBWSxDQUFDRyxRQUFiLENBQXNCLE9BQXRCO0FBQ0FuQixJQUFBQSxNQUFNLENBQUNLLFNBQUQsQ0FBTixDQUFrQmUscUJBQWxCLENBQXdDLENBQXhDO0FBQ0FwQixJQUFBQSxNQUFNLENBQUNhLE1BQU0sQ0FBQ0MsT0FBUixDQUFOLENBQXVCTyxVQUF2QjtBQUNBckIsSUFBQUEsTUFBTSxDQUFDWSxhQUFELENBQU4sQ0FBc0JVLGdCQUF0QjtBQUNILEdBZkMsQ0FBRixDQWhCeUIsQ0FpQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBRUgsQ0F0Q08sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcblxuaW1wb3J0IHsgc2hhbGxvdyB9IGZyb20gJ2VuenltZSc7XG5pbXBvcnQgSGVhZGVyIGZyb20gJy4vSGVhZGVyJztcbmltcG9ydCB7IHNoYWxsb3dUb0pzb24gfSBmcm9tICdlbnp5bWUtdG8tanNvbic7XG5cblxuZGVzY3JpYmUoXCI8SGVhZGVyIC8+XCIsICgpID0+IHtcblxuICAgIGxldCB3cmFwcGVyO1xuXG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7IHdyYXBwZXIgPSBzaGFsbG93KDxIZWFkZXIgLz4pOyB9KTtcblxuICAgIGl0KFwic2hvdWxkIHJlbmRlciBjb3JyZWN0bHlcIiwgKCkgPT4ge1xuICAgICAgICBleHBlY3Qoc2hhbGxvd1RvSnNvbih3cmFwcGVyKSkudG9NYXRjaFNuYXBzaG90KCk7XG4gICAgfSk7XG5cblxuICAgIGl0KCdpbmNsdWRlcyBhbiBoMiB0YWcgdGhhdCBzcGVjaWZpZXMgdGhlIGFwcGxpY2F0aW9uIG5hbWUnLCAoKSA9PiB7XG5cbiAgICAgICAgZXhwZWN0KHdyYXBwZXIuZmluZCgnaDIub3JhbmdpZnknKS50ZXh0KCkpLnRvQmUoXCJDYWtlIHwgUE9TXCIpO1xuICAgIH0pO1xuXG4gICAgaXQoXCJzaG91bGQgaGFuZGxlIHRoZSBjbGljayBldmVudFwiLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGxvZ091dFNweSA9IGplc3Quc3B5T24od3JhcHBlci5pbnN0YW5jZSgpLCBcImxvZ291dFwiKTtcbiAgICAgICAgY29uc3QgaGlzdG9yeSA9IHtcbiAgICAgICAgICAgIHB1c2g6IGplc3QuZm4oKVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGxvZ091dEF1dGhTcHkgPSBqZXN0LmZuKGhpc3RvcnkucHVzaCk7XG5cbiAgICAgICAgd2luZG93LmNvbmZpcm0gPSBqZXN0LmZuKCgpID0+IHRydWUpXG4gICAgICAgIHdyYXBwZXIuaW5zdGFuY2UoKS5mb3JjZVVwZGF0ZSgpO1xuICAgICAgICBjb25zdCBsb2dvdXRCdXR0b24gPSB3cmFwcGVyLmZpbmQoJyNsb2dvdXQtYnRuJyk7XG4gICAgICAgIGV4cGVjdChsb2dPdXRTcHkpLm5vdC50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gICAgICAgIGxvZ291dEJ1dHRvbi5zaW11bGF0ZSgnY2xpY2snKTtcbiAgICAgICAgZXhwZWN0KGxvZ091dFNweSkudG9IYXZlQmVlbkNhbGxlZFRpbWVzKDEpO1xuICAgICAgICBleHBlY3Qod2luZG93LmNvbmZpcm0pLnRvQmVDYWxsZWQoKTtcbiAgICAgICAgZXhwZWN0KGxvZ091dEF1dGhTcHkpLnRvSGF2ZUJlbm5DYWxsZWQoKTtcbiAgICB9KVxuXG4gICAgLy8gaXQoJ2luY2x1ZGVzIGEgQnV0dG9uIHRvIGxvZ291dCcsICgpID0+IHtcbiAgICAvLyAgICAgY29uc3QgbG9nb3V0QnV0dG9uID0gd3JhcHBlci5maW5kKCdCdXR0b24nKS50ZXh0KCkudG9CZVRydXRoeTtcbiAgICAvLyAgICAgbG9nb3V0QnV0dG9uLnNpbXVsYXRlKCdjbGljaycpO1xuICAgIC8vIH0pO1xuXG59KTtcblxuXG4iXX0=