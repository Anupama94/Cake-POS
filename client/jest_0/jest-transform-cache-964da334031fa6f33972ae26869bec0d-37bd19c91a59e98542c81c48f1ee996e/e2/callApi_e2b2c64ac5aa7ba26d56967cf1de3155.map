{"version":3,"sources":["callApi.js"],"names":["baseUrl","userLogin","credentials","Promise","resolve","reject","postCall","then","result","status","HttpStatus","OK","apiConfig","authenticationToken","data","token","userId","id","catch","err","response","UNAUTHORIZED","message","error","AUTH_FAILED","MESSAGE","code","CODE","INTERNAL_SERVER_ERROR","SERVICE_UNAVAILABLE","UNRECOGNIZED_ERROR","getOrderItems","orderId","authenticatedGetCall","NOT_FOUND","updateOrder","updateOps","putCall","getUsersOrders","console","log","getMenuItems","url","mydata","callingUrl","axios","post","CREATED","UNEXPECTED_ERROR","requestHeader","headers","get","put","NO_CONTENT"],"mappings":"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","sourcesContent":["import { apiConfig } from '../apiCalls/config';\nimport axios from 'axios';\nimport { error } from './errorConstants';\nimport HttpStatus from 'http-status-codes';\n\nconst baseUrl = \"http://localhost:3001/\";\n\nexport const userLogin = (credentials) => {\n    return new Promise((resolve, reject) => {\n        postCall(\"users/login\", credentials)\n            .then(result => {\n                if (result.status === HttpStatus.OK) {\n                    apiConfig.authenticationToken = result.data.token;\n                    apiConfig.userId = result.data.id;\n                    resolve(result);\n                }\n            })\n            .catch(err => {\n                if (err.response.status === HttpStatus.UNAUTHORIZED) {\n                    reject({\n                        message: error.AUTH_FAILED.MESSAGE,\n                        code: error.AUTH_FAILED.CODE\n                    });\n                }\n                else if (err.response.status === HttpStatus.INTERNAL_SERVER_ERROR) {\n                    reject({\n                        message: error.SERVICE_UNAVAILABLE.MESSAGE,\n                        code: error.SERVICE_UNAVAILABLE.CODE\n                    });\n                }\n                else {\n                    reject({\n                        message: error.UNRECOGNIZED_ERROR.MESSAGE,\n                        code: error.UNRECOGNIZED_ERROR.CODE\n                    });\n                }\n\n            });\n    });\n}\n\nexport const getOrderItems = (orderId) => {\n    return new Promise((resolve, reject) => {\n        authenticatedGetCall(\"orders/\" + orderId)\n            .then(result => {\n                if (result.status === HttpStatus.OK) {\n                    resolve(result);\n                }\n                else if (result.status === HttpStatus.NOT_FOUND) {\n                    resolve(result);\n                }\n            })\n            .catch(err => {\n                if (err.response.status === HttpStatus.INTERNAL_SERVER_ERROR) {\n                    reject({\n                        message: error.SERVICE_UNAVAILABLE.MESSAGE,\n                        code: error.SERVICE_UNAVAILABLE.CODE\n                    });\n                }\n                else {\n                    reject({\n                        message: error.UNRECOGNIZED_ERROR.MESSAGE,\n                        code: error.UNRECOGNIZED_ERROR.CODE\n                    });\n                }\n            });\n    });\n}\n\n\nexport const updateOrder = (orderId, updateOps) => {\n    return new Promise((resolve, reject) => {\n        putCall(\"orders/\" + orderId, updateOps)\n            .then(result => {\n                if (result.status === HttpStatus.OK) {\n                    resolve(result);\n                }\n\n            })\n            .catch(err => {\n                if (err.response.status === HttpStatus.INTERNAL_SERVER_ERROR) {\n                    reject({\n                        message: error.SERVICE_UNAVAILABLE.MESSAGE,\n                        code: error.SERVICE_UNAVAILABLE.CODE\n                    });\n                }\n                else {\n                    reject({\n                        message: error.UNRECOGNIZED_ERROR.MESSAGE,\n                        code: error.UNRECOGNIZED_ERROR.CODE\n                    });\n                }\n            });\n    });\n}\n\n\n// this needs to be changed\nexport const getUsersOrders = () => {\n    return new Promise((resolve, reject) => {\n        console.log(apiConfig.userId);\n        authenticatedGetCall(\"orders/all/\" + apiConfig.userId)\n            .then(result => {\n                if (result.status === HttpStatus.OK) {\n                    resolve(result);\n                }\n                else if (result.status === HttpStatus.NOT_FOUND) {\n                    resolve(result);\n                }\n            })\n            .catch(err => {\n                if (err.response.status === HttpStatus.INTERNAL_SERVER_ERROR) {\n                    reject({\n                        message: error.SERVICE_UNAVAILABLE.MESSAGE,\n                        code: error.SERVICE_UNAVAILABLE.CODE\n                    });\n                }\n                else {\n                    reject({\n                        message: error.UNRECOGNIZED_ERROR.MESSAGE,\n                        code: error.UNRECOGNIZED_ERROR.CODE\n                    });\n                }\n            });\n    });\n}\n\n\nexport const getMenuItems = () => {\n    return new Promise((resolve, reject) => {\n        authenticatedGetCall(\"items/\")\n            .then(result => {\n                if (result.status === HttpStatus.OK) {\n                    resolve(result);\n                }\n                else if (result.status === HttpStatus.NOT_FOUND) {\n                    resolve(result);\n                }\n\n            })\n            .catch(err => {\n                if (err.response.status === HttpStatus.INTERNAL_SERVER_ERROR) {\n                    reject({\n                        message: error.SERVICE_UNAVAILABLE.MESSAGE,\n                        code: error.SERVICE_UNAVAILABLE.CODE\n                    });\n                }\n                else {\n                    reject({\n                        message: error.UNRECOGNIZED_ERROR.MESSAGE,\n                        code: error.UNRECOGNIZED_ERROR.CODE\n                    });\n                }\n            });\n    });\n}\n\n\n/*\n    POST, GET, PUT calls defined\n */\n\nfunction postCall(url, mydata) {\n    return new Promise((resolve, reject) => {\n        let callingUrl = baseUrl + url;\n        axios.post(callingUrl, mydata)\n            .then(response => {\n                if (response.status === HttpStatus.OK || response.status === HttpStatus.CREATED) {\n                    resolve(response);\n                }\n            }\n            )\n            .catch(err => {\n                if (err.response.status === HttpStatus.UNAUTHORIZED) {\n                    console.log(\"Unauthorized request initiated from axios post call in callApi.js\");\n                    reject(err);\n                }\n                else if (err.response.status === HttpStatus.INTERNAL_SERVER_ERROR) {\n                    console.log(\"Internal Server Error initiated from axios post call in callApi.js\");\n                    reject(err);\n                }\n                else {\n                    console.log(error.UNEXPECTED_ERROR.MESSAGE + \" initiated from  axios post call in callApi.js\");\n                    reject(err);\n                }\n            });\n    });\n}\n\n\nfunction authenticatedGetCall(url) {\n    const requestHeader = { headers: { \"Authorization\": \"Bearer \" + apiConfig.authenticationToken } };\n\n    return new Promise((resolve, reject) => {\n        let callingUrl = baseUrl + url;\n        axios.get(callingUrl, requestHeader)\n            .then(response => {\n                if (response.status === HttpStatus.OK || response.response.status === HttpStatus.NOT_FOUND) {\n                    resolve(response);\n                }\n            })\n            .catch(err => {\n                if (err.response.status === HttpStatus.INTERNAL_SERVER_ERROR) {\n                    console.log(\"Internal Server Error initiated from axios authenticatedGetCall in callApi.js\")\n                    reject(err);\n                }\n                else {\n                    console.log(error.UNEXPECTED_ERROR.MESSAGE + \" initiated from  axios authenticatedGetCall in callApi.js\");\n                    reject(err);\n                }\n            });\n\n    });\n}\n\n\nfunction putCall(url, updateOps) {\n    return new Promise((resolve, reject) => {\n        let callingUrl = baseUrl + url;\n        axios.put(callingUrl, updateOps)\n            .then(response => {\n                if (response.status === HttpStatus.OK || response.status === HttpStatus.NO_CONTENT || response.status === HttpStatus.CREATED) {\n                    resolve(response);\n                }\n            })\n            .catch(err => {\n                if (err.response.status === HttpStatus.INTERNAL_SERVER_ERROR) {\n                    console.log(\"Internal Server Error initiated from axios putCall in callApi.js\")\n                    reject(err);\n                }\n                else {\n                    console.log(error.UNEXPECTED_ERROR.MESSAGE + \" initiated from axios putCall in callApi.js\");\n                    reject(err);\n                }\n            });\n    });\n}"]}