{"version":3,"sources":["LoginBox.js"],"names":["LoginBox","React","Component","constructor","props","submitLogin","state","validate","emailState","passwordState","setState","email","password","then","response","auth","login","context","router","history","push","catch","err","errorAlert","visible","message","handleChange","event","target","value","name","bind","validateEmail","validatePassword","e","emailRex","test","render","contextTypes","PropTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Login.css';\nimport { Form, FormGroup, Label, Input, FormFeedback, Col, Alert } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport auth from '../../authentication/auth';\nimport { userLogin } from '../../apiCalls/callApi';\n\n\n\nexport class LoginBox extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      validate: {\n        emailState: '',\n        passwordState: ''\n      },\n      errorAlert: {\n        visible: false,\n        message: ''\n      }\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.validatePassword = this.validatePassword.bind(this);\n  }\n\n  static contextTypes = {\n    router: PropTypes.object\n  }\n\n\n  submitLogin = () => {\n    \n    if ((this.state.validate.emailState !== 'has-success') && (this.state.validate.passwordState !== 'has-success')) {\n      this.setState({ validate: { emailState: 'has-danger', passwordState: this.state.validate.passwordState } });\n    }\n\n    else if ((this.state.validate.emailState === 'has-success') && (this.state.validate.passwordState !== 'has-success')) {\n      this.setState({ validate: { emailState: this.state.validate.emailState, passwordState: 'has-danger' } });\n    }\n    else if ((this.state.validate.emailState !== 'has-success') && (this.state.validate.passwordState === 'has-success')) {\n      this.setState({ validate: { emailState: 'has-danger', passwordState: this.state.validate.passwordState } });\n    }\n    else {\n      userLogin({ email: this.state.email, password: this.state.password })\n        .then((response) => {\n          auth.login(() => {\n            this.context.router.history.push(\"/OrderList\");\n          })\n        })\n        .catch(err => {\n          this.setState({ email: '', password: '' });\n          this.setState({ validate: { emailState: 'has-danger' } });\n          this.setState({ errorAlert: { visible: true, message: err.message } });\n        });\n    }\n\n\n  }\n\n  validateEmail(e) {\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (emailRex.test(e.target.value)) {\n      this.setState({ validate: { emailState: 'has-success', passwordState: this.state.validate.passwordState } });\n    } else {\n      this.setState({ validate: { emailState: 'has-danger', passwordState: this.state.validate.passwordState } });\n    }\n\n  }\n\n\n  validatePassword(e) {\n    if (e.target.value) {\n      this.setState({ validate: { emailState: this.state.validate.emailState, passwordState: 'has-success' } });\n    }\n    else {\n      this.setState({ validate: { emailState: this.state.validate.emailState, passwordState: 'has-danger' } });\n    }\n  }\n\n\n  handleChange = async (event) => {\n    const { target } = event;\n    const value = target.value;\n    const { name } = target;\n    await this.setState({\n      [name]: value,\n    });\n  }\n\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <div className=\"inner-container\">\n        <div className=\"header\">\n          Log In\n          </div>\n        <div className=\"box\">\n\n          <Form>\n            <Col>\n              <FormGroup>\n                <Label>Username</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"exampleEmail\"\n                  placeholder=\"myemail@email.com\"\n                  value={email}\n                  valid={this.state.validate.emailState === 'has-success'}\n                  invalid={this.state.validate.emailState === 'has-danger'}\n                  onChange={(e) => {\n                    this.validateEmail(e)\n                    this.handleChange(e)\n                  }}\n                />\n\n                <FormFeedback invalid>\n                  Uh oh! Looks like there is an issue with your email. Please input a correct email.\n                </FormFeedback>\n              </FormGroup>\n            </Col>\n            <Col>\n              <FormGroup>\n                <Label for=\"examplePassword\">Password</Label>\n                <Input\n                  required\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"examplePassword\"\n                  placeholder=\"Password\"\n                  value={password}\n                  valid={this.state.validate.passwordState === 'has-success'}\n                  invalid={this.state.validate.passwordState === 'has-danger'}\n                  onChange={(e) => {\n                    this.validatePassword(e)\n                    this.handleChange(e)\n                  }\n                  }\n                />\n                <FormFeedback invalid>\n                  *Password is required!\n                </FormFeedback>\n              </FormGroup>\n            </Col>\n          </Form>\n\n          <Alert color=\"danger\" isOpen={this.state.errorAlert.visible}>\n            {this.state.errorAlert.message}\n          </Alert>\n\n          <button type=\"button\" className=\"login-btn\" onClick={this.submitLogin}> Login </button>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default LoginBox;"]}