{"version":3,"sources":["LoginBox.js"],"names":["LoginBox","React","Component","constructor","props","handleChange","event","target","value","name","setState","state","email","password","validate","emailState","passwordState","errorAlert","visible","message","bind","validateEmail","validatePassword","submitLogin","e","preventDefault","then","response","auth","login","context","router","history","push","catch","err","emailRex","test","render","contextTypes","PropTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Login.css';\nimport { Form, FormGroup, Label, Input, FormFeedback, Col, Alert } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport auth from '../../authentication/auth';\nimport { userLogin } from '../../apiCalls/callApi';\n\n\n  \nexport class LoginBox extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      validate: {\n        emailState: '',\n        passwordState: ''\n      },\n      errorAlert: {\n        visible: false,\n        message: ''\n      }\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.validatePassword = this.validatePassword.bind(this);\n  }\n\n  static contextTypes = {\n    router: PropTypes.object\n  }\n\n\n  submitLogin(e) {\n    e.preventDefault();\n     \n    if ((this.state.validate.emailState !== 'has-success') && (this.state.validate.passwordState !== 'has-success')){\n      this.setState({validate: { emailState: 'has-danger', passwordState: this.state.validate.passwordState }});\n    }\n\n    else  if ((this.state.validate.emailState === 'has-success') && (this.state.validate.passwordState !== 'has-success')){\n      this.setState({validate: { emailState: this.state.validate.emailState, passwordState: 'has-danger' }});\n    }\n    else  if ((this.state.validate.emailState !== 'has-success') && (this.state.validate.passwordState === 'has-success')){\n      this.setState({validate: { emailState: 'has-danger', passwordState: this.state.validate.passwordState }});\n    }\n    else{\n        userLogin({ email: this.state.email, password: this.state.password })\n            .then((response) => {\n                    auth.login(() => {\n                        this.context.router.history.push(\"/OrderList\");\n                    })\n            })\n            .catch(err => {\n                this.setState({ email: '', password: '' });\n                this.setState({ validate: {emailState: 'has-danger'} });\n                this.setState({errorAlert: {visible: true, message: err.message}});\n            });\n    }\n\n    \n    \n  \n  }\n\n  validateEmail(e) {\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    \n    if (emailRex.test(e.target.value)) {\n      this.setState({validate: { emailState: 'has-success', passwordState: this.state.validate.passwordState }});\n    } else {\n      this.setState({validate: { emailState: 'has-danger', passwordState: this.state.validate.passwordState }});\n    }\n\n  }\n\n  validatePassword(e) {\n    if (e.target.value){\n      this.setState({validate: { emailState: this.state.validate.emailState, passwordState: 'has-success' }});\n    }\n    else{\n      this.setState({validate: { emailState: this.state.validate.emailState, passwordState: 'has-danger' }});\n    }\n  }\n\n  handleChange = async (event) => {\n    const { target } = event;\n    const value = target.value;\n    const { name } = target;\n    await this.setState({\n      [name]: value,\n    });\n  }\n\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <div className=\"inner-container\">\n        <div className=\"header\">\n          Log In\n          </div>\n        <div className=\"box\">\n\n          <Form>\n            <Col>\n              <FormGroup>\n                <Label>Username</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"exampleEmail\"\n                  placeholder=\"myemail@email.com\"\n                  value={email}\n                  valid={this.state.validate.emailState === 'has-success'}\n                  invalid={this.state.validate.emailState === 'has-danger'}\n                  onChange={(e) => {\n                    this.validateEmail(e)\n                    this.handleChange(e)\n                  }}\n                />\n\n                <FormFeedback invalid>\n                  Uh oh! Looks like there is an issue with your email. Please input a correct email.\n                </FormFeedback>\n              </FormGroup>\n            </Col>\n            <Col>\n              <FormGroup>\n                <Label for=\"examplePassword\">Password</Label>\n                <Input\n                required\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"examplePassword\"\n                  placeholder=\"Password\"\n                  value={password}\n                  valid={this.state.validate.passwordState === 'has-success'}\n                  invalid={this.state.validate.passwordState === 'has-danger'}\n                  onChange={(e) => {\n                    this.validatePassword(e)\n                    this.handleChange(e)\n                    }\n                  }\n                />\n                <FormFeedback invalid>\n                  *Password is required!\n                </FormFeedback>\n              </FormGroup>\n            </Col>\n          </Form>\n\n          <Alert color=\"danger\" isOpen={this.state.errorAlert.visible}>\n                  {this.state.errorAlert.message}\n      </Alert>\n\n          <button type=\"button\" className=\"login-btn\" onClick={this.submitLogin.bind(this)}> Login </button>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default LoginBox;"]}