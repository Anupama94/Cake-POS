{"version":3,"sources":["Header.test.js"],"names":["describe","wrapper","beforeEach","it","expect","toMatchSnapshot","find","text","toBe","logOutSpy","jest","fn","logout","logoutButton","not","toHaveBeenCalled","simulate","state","clicked","toEqual"],"mappings":";;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;AAGAA,QAAQ,CAAC,YAAD,EAAe,MAAM;AAEzB,MAAIC,OAAJ;AAEAC,EAAAA,UAAU,CAAC,MAAM;AAAED,IAAAA,OAAO,GAAG,qBAAQ,6BAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CAAV;AAAgC,GAAzC,CAAV;AAEAE,EAAAA,EAAE,CAAC,yBAAD,EAA4B,MAAM;AAChCC,IAAAA,MAAM,CAAC,iCAAcH,OAAd,CAAD,CAAN,CAA+BI,eAA/B;AACH,GAFC,CAAF;AAKAF,EAAAA,EAAE,CAAC,wDAAD,EAA2D,MAAM;AAE/DC,IAAAA,MAAM,CAACH,OAAO,CAACK,IAAR,CAAa,aAAb,EAA4BC,IAA5B,EAAD,CAAN,CAA2CC,IAA3C,CAAgD,YAAhD;AACH,GAHC,CAAF;AAKAL,EAAAA,EAAE,CAAC,+BAAD,EAAkC,MAAM;AACtC,UAAMM,SAAS,GAAGC,IAAI,CAACC,EAAL,EAAlB;AACA,UAAMC,MAAM,GAAGH,SAAf;AACA,UAAMI,YAAY,GAAGZ,OAAO,CAACK,IAAR,CAAa,aAAb,CAArB;AACAF,IAAAA,MAAM,CAACK,SAAD,CAAN,CAAkBK,GAAlB,CAAsBC,gBAAtB,GAJsC,CAKvC;;AACCF,IAAAA,YAAY,CAACG,QAAb,CAAsB,OAAtB;AACAZ,IAAAA,MAAM,CAACS,YAAY,CAACI,KAAb,GAAqBC,OAAtB,CAAN,CAAqCC,OAArC,CAA6C,IAA7C,EAPsC,CAQtC;AACH,GATC,CAAF,CAhByB,CA2BzB;AACA;AACA;AACA;AAEH,CAhCO,CAAR","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { shallow } from 'enzyme';\nimport Header from './Header';\nimport { shallowToJson } from 'enzyme-to-json';\n\n\ndescribe(\"<Header />\", () => {\n\n    let wrapper;\n\n    beforeEach(() => { wrapper = shallow(<Header />); });\n\n    it(\"should render correctly\", () => {\n        expect(shallowToJson(wrapper)).toMatchSnapshot();\n    });\n\n\n    it('includes an h2 tag that specifies the application name', () => {\n\n        expect(wrapper.find('h2.orangify').text()).toBe(\"Cake | POS\");\n    });\n\n    it(\"should handle the click event\", () => {\n        const logOutSpy = jest.fn();\n        const logout = logOutSpy;\n        const logoutButton = wrapper.find('#logout-btn');\n        expect(logOutSpy).not.toHaveBeenCalled();\n       // expect(logoutButton.clicked).toEqual(false);\n        logoutButton.simulate('click');\n        expect(logoutButton.state().clicked).toEqual(true);\n        //expect(logOutSpy).toHaveBeenCalled();\n    })\n\n    // it('includes a Button to logout', () => {\n    //     const logoutButton = wrapper.find('Button').text().toBeTruthy;\n    //     logoutButton.simulate('click');\n    // });\n\n});"]}